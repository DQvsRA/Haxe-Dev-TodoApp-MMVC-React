// Generated by Haxe 3.4.7
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var core_view_Component = function(props) {
	React.Component.call(this,props);
	this.state = this.defaultState();
};
$hxClasses["core.view.Component"] = core_view_Component;
core_view_Component.__name__ = ["core","view","Component"];
core_view_Component.__super__ = React.Component;
core_view_Component.prototype = $extend(React.Component.prototype,{
	defaultState: function() {
		return null;
	}
	,getClassName: function() {
		return Type.getClassName(js_Boot.getClass(this)).split(".").pop();
	}
	,__class__: core_view_Component
});
var core_interfaces_IApplication = function() { };
$hxClasses["core.interfaces.IApplication"] = core_interfaces_IApplication;
core_interfaces_IApplication.__name__ = ["core","interfaces","IApplication"];
core_interfaces_IApplication.prototype = {
	__class__: core_interfaces_IApplication
};
var mmvc_api_IViewContainer = function() { };
$hxClasses["mmvc.api.IViewContainer"] = mmvc_api_IViewContainer;
mmvc_api_IViewContainer.__name__ = ["mmvc","api","IViewContainer"];
mmvc_api_IViewContainer.prototype = {
	__class__: mmvc_api_IViewContainer
};
var Application = function(props) {
	core_view_Component.call(this,props);
	this._context = new app_ApplicationContext(this,true);
};
$hxClasses["Application"] = Application;
Application.__name__ = ["Application"];
Application.__interfaces__ = [core_interfaces_IApplication,mmvc_api_IViewContainer];
Application.init = function() {
	var appContainer = window.document.getElementById("container");
	ReactDOM.render(React.createElement(Application),appContainer);
};
Application.__super__ = core_view_Component;
Application.prototype = $extend(core_view_Component.prototype,{
	isAdded: function(view) {
		return this._isAdded;
	}
	,componentDidMount: function() {
		this._isAdded = true;
	}
	,render: function() {
		var tmp = React.createElement(app_view_components_TodoForm,{ root : this});
		var tmp1 = React.createElement(app_view_components_TodoList,{ root : this});
		var tmp2 = React.createElement(app_view_components_popups_InfoPopup,{ root : this});
		return React.createElement("div",{ key : "application", id : "app"},tmp,tmp1,tmp2);
	}
	,onViewAdded: function(view) {
		this.viewAdded(view);
	}
	,onViewRemoved: function(view) {
		this.viewRemoved(view);
	}
	,__class__: Application
});
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.main = function() {
	Application.init();
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var mmvc_api_IContext = function() { };
$hxClasses["mmvc.api.IContext"] = mmvc_api_IContext;
mmvc_api_IContext.__name__ = ["mmvc","api","IContext"];
mmvc_api_IContext.prototype = {
	__class__: mmvc_api_IContext
	,__properties__: {get_commandMap:"get_commandMap"}
};
var mmvc_impl_Context = function(contextView,autoStartup) {
	if(autoStartup == null) {
		autoStartup = true;
	}
	this.autoStartup = autoStartup;
	this.set_contextView(contextView);
};
$hxClasses["mmvc.impl.Context"] = mmvc_impl_Context;
mmvc_impl_Context.__name__ = ["mmvc","impl","Context"];
mmvc_impl_Context.__interfaces__ = [mmvc_api_IContext];
mmvc_impl_Context.prototype = {
	startup: function() {
	}
	,shutdown: function() {
	}
	,set_contextView: function(value) {
		if(this.contextView != value) {
			this.contextView = value;
			this.commandMap = null;
			this.mediatorMap = null;
			this.viewMap = null;
			this.triggerMap = null;
			this.mapInjections();
			this.checkAutoStartup();
		}
		return value;
	}
	,get_injector: function() {
		if(this.injector == null) {
			return this.createInjector();
		}
		return this.injector;
	}
	,get_reflector: function() {
		if(this.reflector == null) {
			this.reflector = new minject_Reflector();
		}
		return this.reflector;
	}
	,get_commandMap: function() {
		if(this.commandMap == null) {
			this.commandMap = new mmvc_base_CommandMap(this.createChildInjector());
		}
		return this.commandMap;
	}
	,get_mediatorMap: function() {
		if(this.mediatorMap == null) {
			this.mediatorMap = new mmvc_base_MediatorMap(this.contextView,this.createChildInjector(),this.get_reflector());
		}
		return this.mediatorMap;
	}
	,get_viewMap: function() {
		if(this.viewMap == null) {
			this.viewMap = new mmvc_base_ViewMap(this.contextView,this.get_injector());
		}
		return this.viewMap;
	}
	,get_triggerMap: function() {
		if(this.triggerMap == null) {
			this.triggerMap = new mmvc_base_TriggerMap(this.get_injector());
		}
		return this.triggerMap;
	}
	,mapInjections: function() {
		this.get_injector().mapValue(minject_Reflector,this.get_reflector());
		this.get_injector().mapValue(minject_Injector,this.get_injector());
		this.get_injector().mapValue(mmvc_api_IViewContainer,this.contextView);
		this.get_injector().mapValue(mmvc_api_ICommandMap,this.get_commandMap());
		this.get_injector().mapValue(mmvc_api_IMediatorMap,this.get_mediatorMap());
		this.get_injector().mapValue(mmvc_api_IViewMap,this.get_viewMap());
		this.get_injector().mapValue(mmvc_api_ITriggerMap,this.get_triggerMap());
	}
	,checkAutoStartup: function() {
		if(this.autoStartup && this.contextView != null) {
			this.startup();
		}
	}
	,createInjector: function() {
		this.injector = new minject_Injector();
		return this.get_injector();
	}
	,createChildInjector: function() {
		return this.get_injector().createChildInjector();
	}
	,__class__: mmvc_impl_Context
	,__properties__: {get_triggerMap:"get_triggerMap",get_viewMap:"get_viewMap",get_reflector:"get_reflector",get_mediatorMap:"get_mediatorMap",get_injector:"get_injector",get_commandMap:"get_commandMap",set_contextView:"set_contextView"}
};
var app_ApplicationContext = function(contextView,autoStartup) {
	if(autoStartup == null) {
		autoStartup = true;
	}
	this.START_UP_SIGNAL = new msignal_Signal0();
	this.get_commandMap().mapSignal(this.START_UP_SIGNAL,app_controller_commands_StartupCommand,true);
	mmvc_impl_Context.call(this,contextView,autoStartup);
};
$hxClasses["app.ApplicationContext"] = app_ApplicationContext;
app_ApplicationContext.__name__ = ["app","ApplicationContext"];
app_ApplicationContext.__super__ = mmvc_impl_Context;
app_ApplicationContext.prototype = $extend(mmvc_impl_Context.prototype,{
	startup: function() {
		haxe_Log.trace("-> Startup",{ fileName : "ApplicationContext.hx", lineNumber : 20, className : "app.ApplicationContext", methodName : "startup"});
		this.START_UP_SIGNAL.dispatch();
		this.START_UP_SIGNAL = null;
	}
	,__class__: app_ApplicationContext
});
var mmvc_api_ICommand = function() { };
$hxClasses["mmvc.api.ICommand"] = mmvc_api_ICommand;
mmvc_api_ICommand.__name__ = ["mmvc","api","ICommand"];
mmvc_api_ICommand.prototype = {
	__class__: mmvc_api_ICommand
};
var mmvc_impl_Command = function() {
};
$hxClasses["mmvc.impl.Command"] = mmvc_impl_Command;
mmvc_impl_Command.__name__ = ["mmvc","impl","Command"];
mmvc_impl_Command.__interfaces__ = [mmvc_api_ICommand];
mmvc_impl_Command.prototype = {
	execute: function() {
	}
	,__class__: mmvc_impl_Command
};
var app_controller_commands_StartupCommand = function() {
	this._subSignalCommands = [];
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.StartupCommand"] = app_controller_commands_StartupCommand;
app_controller_commands_StartupCommand.__name__ = ["app","controller","commands","StartupCommand"];
app_controller_commands_StartupCommand.__super__ = mmvc_impl_Command;
app_controller_commands_StartupCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	initializeMacroCommand: function() {
		haxe_Log.trace("> initializeMacroCommand",{ fileName : "StartupCommand.hx", lineNumber : 16, className : "app.controller.commands.StartupCommand", methodName : "initializeMacroCommand"});
		this.addSubCommand(app_controller_commands_prepare_PrepareInjectionCommand);
		this.addSubCommand(app_controller_commands_prepare_PrepareControllerCommand);
		this.addSubCommand(app_controller_commands_prepare_PrepareViewCommand);
		this.addSubCommand(app_controller_commands_prepare_PrepareCompleteCommand);
	}
	,addSubCommand: function(commandClassRef) {
		var subCommandSignal = new msignal_Signal0();
		this._subSignalCommands.push(subCommandSignal);
		this.commandMap.mapSignal(subCommandSignal,commandClassRef,true);
	}
	,execute: function() {
		this.initializeMacroCommand();
		var subCommandSignal;
		while(this._subSignalCommands.length > 0) {
			subCommandSignal = this._subSignalCommands.shift();
			subCommandSignal.dispatch();
		}
	}
	,__class__: app_controller_commands_StartupCommand
});
var app_controller_commands_prepare_PrepareCompleteCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.prepare.PrepareCompleteCommand"] = app_controller_commands_prepare_PrepareCompleteCommand;
app_controller_commands_prepare_PrepareCompleteCommand.__name__ = ["app","controller","commands","prepare","PrepareCompleteCommand"];
app_controller_commands_prepare_PrepareCompleteCommand.__super__ = mmvc_impl_Command;
app_controller_commands_prepare_PrepareCompleteCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	execute: function() {
		haxe_Log.trace("-> execute",{ fileName : "PrepareCompleteCommand.hx", lineNumber : 19, className : "app.controller.commands.prepare.PrepareCompleteCommand", methodName : "execute"});
		this.messageModel.addMessage(enums_strings_MessageStrings.PREPARING);
		this.todoModel.loadTodos($bind(this,this.callbackLoadTodosComplete));
	}
	,callbackLoadTodosComplete: function(todos) {
		haxe_Log.trace("-> loadTodos: length = " + todos.length,{ fileName : "PrepareCompleteCommand.hx", lineNumber : 27, className : "app.controller.commands.prepare.PrepareCompleteCommand", methodName : "callbackLoadTodosComplete"});
		var message = enums_strings_MessageStrings.FAIL_TO_LOAD_DATA;
		if(todos != null) {
			this.todoListMediatorNotificationSignal.dispatch(app_controller_signals_TodoListMediatorNotificationSignal.SETUP_TODOS,todos);
			message = enums_strings_MessageStrings.DATA_READY;
		}
		this.messageModel.addMessage(message);
	}
	,__class__: app_controller_commands_prepare_PrepareCompleteCommand
});
var app_controller_commands_prepare_PrepareControllerCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.prepare.PrepareControllerCommand"] = app_controller_commands_prepare_PrepareControllerCommand;
app_controller_commands_prepare_PrepareControllerCommand.__name__ = ["app","controller","commands","prepare","PrepareControllerCommand"];
app_controller_commands_prepare_PrepareControllerCommand.__super__ = mmvc_impl_Command;
app_controller_commands_prepare_PrepareControllerCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	execute: function() {
		haxe_Log.trace("-> execute",{ fileName : "PrepareControllerCommand.hx", lineNumber : 21, className : "app.controller.commands.prepare.PrepareControllerCommand", methodName : "execute"});
		this.commandMap.mapSignal(this.createTodoSignal,app_controller_commands_todo_CreateTodoCommand);
		this.commandMap.mapSignal(this.deleteTodoSignal,app_controller_commands_todo_DeleteTodoCommand);
		this.commandMap.mapSignal(this.toggleTodoSignal,app_controller_commands_todo_ToggleTodoCommand);
		this.commandMap.mapSignal(this.updateTodoSignal,app_controller_commands_todo_UpdateTodoCommand);
	}
	,__class__: app_controller_commands_prepare_PrepareControllerCommand
});
var app_controller_commands_prepare_PrepareInjectionCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.prepare.PrepareInjectionCommand"] = app_controller_commands_prepare_PrepareInjectionCommand;
app_controller_commands_prepare_PrepareInjectionCommand.__name__ = ["app","controller","commands","prepare","PrepareInjectionCommand"];
app_controller_commands_prepare_PrepareInjectionCommand.__super__ = mmvc_impl_Command;
app_controller_commands_prepare_PrepareInjectionCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	execute: function() {
		haxe_Log.trace("-> execute",{ fileName : "PrepareInjectionCommand.hx", lineNumber : 16, className : "app.controller.commands.prepare.PrepareInjectionCommand", methodName : "execute"});
		this.injector.mapSingleton(app_controller_signals_todoform_CreateTodoSignal);
		this.injector.mapSingleton(app_controller_signals_todolist_ToggleTodoSignal);
		this.injector.mapSingleton(app_controller_signals_todolist_UpdateTodoSignal);
		this.injector.mapSingleton(app_controller_signals_todolist_DeleteTodoSignal);
		this.injector.mapSingleton(app_controller_signals_TodoListMediatorNotificationSignal);
		this.injector.mapSingleton(app_controller_signals_TodoFormMediatorNotificationSignal);
		this.injector.mapSingleton(app_model_TodoModel);
		this.injector.mapSingleton(app_model_MessageModel);
	}
	,__class__: app_controller_commands_prepare_PrepareInjectionCommand
});
var app_controller_commands_prepare_PrepareViewCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.prepare.PrepareViewCommand"] = app_controller_commands_prepare_PrepareViewCommand;
app_controller_commands_prepare_PrepareViewCommand.__name__ = ["app","controller","commands","prepare","PrepareViewCommand"];
app_controller_commands_prepare_PrepareViewCommand.__super__ = mmvc_impl_Command;
app_controller_commands_prepare_PrepareViewCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	execute: function() {
		haxe_Log.trace("-> execute",{ fileName : "PrepareViewCommand.hx", lineNumber : 14, className : "app.controller.commands.prepare.PrepareViewCommand", methodName : "execute"});
		this.mediatorMap.mapView(app_view_components_TodoList,app_view_mediators_TodoListMediator);
		this.mediatorMap.mapView(app_view_components_TodoForm,app_view_mediators_TodoFormMediator);
		this.mediatorMap.mapView(app_view_components_popups_InfoPopup,app_view_mediators_InfoPopupMediator);
	}
	,__class__: app_controller_commands_prepare_PrepareViewCommand
});
var app_controller_commands_todo_CreateTodoCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.todo.CreateTodoCommand"] = app_controller_commands_todo_CreateTodoCommand;
app_controller_commands_todo_CreateTodoCommand.__name__ = ["app","controller","commands","todo","CreateTodoCommand"];
app_controller_commands_todo_CreateTodoCommand.__super__ = mmvc_impl_Command;
app_controller_commands_todo_CreateTodoCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	get_createTodoSignal: function() {
		return this.signal;
	}
	,execute: function() {
		haxe_Log.trace("-> execute : text = " + this.text,{ fileName : "CreateTodoCommand.hx", lineNumber : 27, className : "app.controller.commands.todo.CreateTodoCommand", methodName : "execute"});
		var isNotEmpty = this.text.length > 0;
		var message;
		if(isNotEmpty) {
			message = enums_strings_MessageStrings.SAVING_NEW_TODO;
			this.todoModel.createTodo(this.text,$bind(this,this.createTodoCallback));
		} else {
			message = enums_strings_MessageStrings.EMPTY_TODO;
			this.get_createTodoSignal().complete.dispatch(false);
		}
		this.messageModel.addMessage(message);
	}
	,createTodoCallback: function(todoVO) {
		var success = todoVO != null;
		if(success) {
			this.todoListMediatorNotificationSignal.dispatch(app_controller_signals_TodoListMediatorNotificationSignal.SETUP_TODOS,this.todoModel.getTodos());
			this.todoFormMediatorNotificationSignal.dispatch(app_controller_signals_TodoFormMediatorNotificationSignal.CLEAR_FORM,null);
		}
		this.messageModel.addMessage(success ? enums_strings_MessageStrings.TODO_SAVED : enums_strings_MessageStrings.PROBLEM_SAVING_TODO);
		this.get_createTodoSignal().complete.dispatch(success);
	}
	,__class__: app_controller_commands_todo_CreateTodoCommand
	,__properties__: {get_createTodoSignal:"get_createTodoSignal"}
});
var app_controller_commands_todo_DeleteTodoCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.todo.DeleteTodoCommand"] = app_controller_commands_todo_DeleteTodoCommand;
app_controller_commands_todo_DeleteTodoCommand.__name__ = ["app","controller","commands","todo","DeleteTodoCommand"];
app_controller_commands_todo_DeleteTodoCommand.__super__ = mmvc_impl_Command;
app_controller_commands_todo_DeleteTodoCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	execute: function() {
		haxe_Log.trace("-> execute: id = " + this.index,{ fileName : "DeleteTodoCommand.hx", lineNumber : 19, className : "app.controller.commands.todo.DeleteTodoCommand", methodName : "execute"});
		this.todoModel.deleteTodo(this.index,$bind(this,this.deleteTodoCallback));
	}
	,deleteTodoCallback: function(success) {
		var message = success ? enums_strings_MessageStrings.DELETE_ITEM_SUCCESS : enums_strings_MessageStrings.PROBLEM_DELETE_ITEM;
		this.messageModel.addMessage(StringTools.replace(message,"%id%",Std.string(this.index + 1)));
		var deleteSignal = this.signal;
		deleteSignal.complete.dispatch(success);
		this.todoListMediatorNotificationSignal.dispatch(app_controller_signals_TodoListMediatorNotificationSignal.SETUP_TODOS,this.todoModel.getTodos());
	}
	,__class__: app_controller_commands_todo_DeleteTodoCommand
});
var app_controller_commands_todo_ToggleTodoCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.todo.ToggleTodoCommand"] = app_controller_commands_todo_ToggleTodoCommand;
app_controller_commands_todo_ToggleTodoCommand.__name__ = ["app","controller","commands","todo","ToggleTodoCommand"];
app_controller_commands_todo_ToggleTodoCommand.__super__ = mmvc_impl_Command;
app_controller_commands_todo_ToggleTodoCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	execute: function() {
		haxe_Log.trace("-> execute | index = " + this.index,{ fileName : "ToggleTodoCommand.hx", lineNumber : 21, className : "app.controller.commands.todo.ToggleTodoCommand", methodName : "execute"});
		this.todoModel.toggleTodo(this.index,$bind(this,this.toggleTodoCallback));
	}
	,toggleTodoCallback: function(success) {
		var message = success ? enums_strings_MessageStrings.TODO_COMPETE : enums_strings_MessageStrings.PROBLEM_UPDATE_TODO;
		var todo = this.todoModel.getTodoByIndex(this.index);
		this.messageModel.addMessage(StringTools.replace(StringTools.replace(message,"%id%",Std.string(this.index + 1)),"%completed%",todo.completed == null ? "null" : "" + todo.completed));
		var toggleSignal = this.signal;
		toggleSignal.complete.dispatch(success);
		this.todoListMediatorNotificationSignal.dispatch(app_controller_signals_TodoListMediatorNotificationSignal.SETUP_TODOS,this.todoModel.getTodos());
	}
	,__class__: app_controller_commands_todo_ToggleTodoCommand
});
var app_controller_commands_todo_UpdateTodoCommand = function() {
	mmvc_impl_Command.call(this);
};
$hxClasses["app.controller.commands.todo.UpdateTodoCommand"] = app_controller_commands_todo_UpdateTodoCommand;
app_controller_commands_todo_UpdateTodoCommand.__name__ = ["app","controller","commands","todo","UpdateTodoCommand"];
app_controller_commands_todo_UpdateTodoCommand.__super__ = mmvc_impl_Command;
app_controller_commands_todo_UpdateTodoCommand.prototype = $extend(mmvc_impl_Command.prototype,{
	execute: function() {
		haxe_Log.trace("-> execute",{ fileName : "UpdateTodoCommand.hx", lineNumber : 21, className : "app.controller.commands.todo.UpdateTodoCommand", methodName : "execute"});
		var isNotEmpty = this.text.length > 0;
		if(isNotEmpty) {
			this.todoModel.updateTodo(this.index,this.text,$bind(this,this.updateTodoCallback));
		} else {
			this.messageModel.addMessage(enums_strings_MessageStrings.TODO_CANT_BE_UPDATED);
		}
	}
	,updateTodoCallback: function(success) {
		var message = success ? enums_strings_MessageStrings.TODO_UPDATED : enums_strings_MessageStrings.PROBLEM_UPDATE_TODO;
		this.messageModel.addMessage(StringTools.replace(message,"%id%",Std.string(this.index + 1)));
		var updateSignal = this.signal;
		updateSignal.complete.dispatch(success);
		this.todoListMediatorNotificationSignal.dispatch(app_controller_signals_TodoListMediatorNotificationSignal.SETUP_TODOS,this.todoModel.getTodos());
	}
	,__class__: app_controller_commands_todo_UpdateTodoCommand
});
var msignal_Signal = function(valueClasses) {
	if(valueClasses == null) {
		valueClasses = [];
	}
	this.valueClasses = valueClasses;
	this.slots = msignal_SlotList.NIL;
	this.priorityBased = false;
};
$hxClasses["msignal.Signal"] = msignal_Signal;
msignal_Signal.__name__ = ["msignal","Signal"];
msignal_Signal.prototype = {
	add: function(listener) {
		return this.registerListener(listener);
	}
	,addOnce: function(listener) {
		return this.registerListener(listener,true);
	}
	,addWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,false,priority);
	}
	,addOnceWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,true,priority);
	}
	,remove: function(listener) {
		var slot = this.slots.find(listener);
		if(slot == null) {
			return null;
		}
		this.slots = this.slots.filterNot(listener);
		return slot;
	}
	,removeAll: function() {
		this.slots = msignal_SlotList.NIL;
	}
	,registerListener: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		if(this.registrationPossible(listener,once)) {
			var newSlot = this.createSlot(listener,once,priority);
			if(!this.priorityBased && priority != 0) {
				this.priorityBased = true;
			}
			if(!this.priorityBased && priority == 0) {
				this.slots = this.slots.prepend(newSlot);
			} else {
				this.slots = this.slots.insertWithPriority(newSlot);
			}
			return newSlot;
		}
		return this.slots.find(listener);
	}
	,registrationPossible: function(listener,once) {
		if(!this.slots.nonEmpty) {
			return true;
		}
		var existingSlot = this.slots.find(listener);
		if(existingSlot == null) {
			return true;
		}
		if(existingSlot.once != once) {
			throw new js__$Boot_HaxeError("You cannot addOnce() then add() the same listener without removing the relationship first.");
		}
		return false;
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return null;
	}
	,get_numListeners: function() {
		return this.slots.get_length();
	}
	,__class__: msignal_Signal
	,__properties__: {get_numListeners:"get_numListeners"}
};
var msignal_Signal2 = function(type1,type2) {
	msignal_Signal.call(this,[type1,type2]);
};
$hxClasses["msignal.Signal2"] = msignal_Signal2;
msignal_Signal2.__name__ = ["msignal","Signal2"];
msignal_Signal2.__super__ = msignal_Signal;
msignal_Signal2.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value1,value2) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value1,value2);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot2(this,listener,once,priority);
	}
	,__class__: msignal_Signal2
});
var app_controller_signals_TodoFormMediatorNotificationSignal = function(type1,type2) {
	msignal_Signal2.call(this,type1,type2);
};
$hxClasses["app.controller.signals.TodoFormMediatorNotificationSignal"] = app_controller_signals_TodoFormMediatorNotificationSignal;
app_controller_signals_TodoFormMediatorNotificationSignal.__name__ = ["app","controller","signals","TodoFormMediatorNotificationSignal"];
app_controller_signals_TodoFormMediatorNotificationSignal.__super__ = msignal_Signal2;
app_controller_signals_TodoFormMediatorNotificationSignal.prototype = $extend(msignal_Signal2.prototype,{
	__class__: app_controller_signals_TodoFormMediatorNotificationSignal
});
var app_controller_signals_TodoListMediatorNotificationSignal = function(type1,type2) {
	msignal_Signal2.call(this,type1,type2);
};
$hxClasses["app.controller.signals.TodoListMediatorNotificationSignal"] = app_controller_signals_TodoListMediatorNotificationSignal;
app_controller_signals_TodoListMediatorNotificationSignal.__name__ = ["app","controller","signals","TodoListMediatorNotificationSignal"];
app_controller_signals_TodoListMediatorNotificationSignal.__super__ = msignal_Signal2;
app_controller_signals_TodoListMediatorNotificationSignal.prototype = $extend(msignal_Signal2.prototype,{
	__class__: app_controller_signals_TodoListMediatorNotificationSignal
});
var msignal_Signal1 = function(type) {
	msignal_Signal.call(this,[type]);
};
$hxClasses["msignal.Signal1"] = msignal_Signal1;
msignal_Signal1.__name__ = ["msignal","Signal1"];
msignal_Signal1.__super__ = msignal_Signal;
msignal_Signal1.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot1(this,listener,once,priority);
	}
	,__class__: msignal_Signal1
});
var app_controller_signals_todoform_CreateTodoSignal = function() {
	this.complete = new msignal_Signal1();
	msignal_Signal1.call(this,String);
};
$hxClasses["app.controller.signals.todoform.CreateTodoSignal"] = app_controller_signals_todoform_CreateTodoSignal;
app_controller_signals_todoform_CreateTodoSignal.__name__ = ["app","controller","signals","todoform","CreateTodoSignal"];
app_controller_signals_todoform_CreateTodoSignal.__super__ = msignal_Signal1;
app_controller_signals_todoform_CreateTodoSignal.prototype = $extend(msignal_Signal1.prototype,{
	__class__: app_controller_signals_todoform_CreateTodoSignal
});
var app_controller_signals_todolist_DeleteTodoSignal = function() {
	this.complete = new msignal_Signal1();
	msignal_Signal1.call(this,Int);
};
$hxClasses["app.controller.signals.todolist.DeleteTodoSignal"] = app_controller_signals_todolist_DeleteTodoSignal;
app_controller_signals_todolist_DeleteTodoSignal.__name__ = ["app","controller","signals","todolist","DeleteTodoSignal"];
app_controller_signals_todolist_DeleteTodoSignal.__super__ = msignal_Signal1;
app_controller_signals_todolist_DeleteTodoSignal.prototype = $extend(msignal_Signal1.prototype,{
	__class__: app_controller_signals_todolist_DeleteTodoSignal
});
var app_controller_signals_todolist_ToggleTodoSignal = function() {
	this.complete = new msignal_Signal1();
	msignal_Signal1.call(this,Int);
};
$hxClasses["app.controller.signals.todolist.ToggleTodoSignal"] = app_controller_signals_todolist_ToggleTodoSignal;
app_controller_signals_todolist_ToggleTodoSignal.__name__ = ["app","controller","signals","todolist","ToggleTodoSignal"];
app_controller_signals_todolist_ToggleTodoSignal.__super__ = msignal_Signal1;
app_controller_signals_todolist_ToggleTodoSignal.prototype = $extend(msignal_Signal1.prototype,{
	__class__: app_controller_signals_todolist_ToggleTodoSignal
});
var app_controller_signals_todolist_UpdateTodoSignal = function() {
	this.complete = new msignal_Signal1();
	msignal_Signal2.call(this,Int,String);
};
$hxClasses["app.controller.signals.todolist.UpdateTodoSignal"] = app_controller_signals_todolist_UpdateTodoSignal;
app_controller_signals_todolist_UpdateTodoSignal.__name__ = ["app","controller","signals","todolist","UpdateTodoSignal"];
app_controller_signals_todolist_UpdateTodoSignal.__super__ = msignal_Signal2;
app_controller_signals_todolist_UpdateTodoSignal.prototype = $extend(msignal_Signal2.prototype,{
	__class__: app_controller_signals_todolist_UpdateTodoSignal
});
var mmvc_impl_Actor = function() {
};
$hxClasses["mmvc.impl.Actor"] = mmvc_impl_Actor;
mmvc_impl_Actor.__name__ = ["mmvc","impl","Actor"];
mmvc_impl_Actor.prototype = {
	__class__: mmvc_impl_Actor
};
var app_model_MessageModel = function() {
	this.isMessageAnimating = false;
	this._messageStack = [];
	this.messageAddedSignal = new msignal_Signal1();
	mmvc_impl_Actor.call(this);
};
$hxClasses["app.model.MessageModel"] = app_model_MessageModel;
app_model_MessageModel.__name__ = ["app","model","MessageModel"];
app_model_MessageModel.__super__ = mmvc_impl_Actor;
app_model_MessageModel.prototype = $extend(mmvc_impl_Actor.prototype,{
	get_length: function() {
		return this._messageStack.length;
	}
	,set_isMessageAnimating: function(value) {
		if(this.isMessageAnimating != value) {
			this.isMessageAnimating = value;
			if(value == false && this._messageStack.length > 0) {
				this.messageAddedSignal.dispatch(this._messageStack.shift());
			}
		}
		return this.isMessageAnimating;
	}
	,addMessage: function(text) {
		if(this.isMessageAnimating == false) {
			this.messageAddedSignal.dispatch(text);
		} else {
			this._messageStack.push(text);
		}
	}
	,__class__: app_model_MessageModel
	,__properties__: {set_isMessageAnimating:"set_isMessageAnimating",get_length:"get_length"}
});
var app_model_TodoModel = function() {
	this.SERVER_TODO_ROUTE = enums_network_ServerAPI.GATEWAY + enums_network_ServerAPI.ROUTE_TODOS;
	this._serverService = app_model_service_ServerService.getInstance();
	this._data = [];
	mmvc_impl_Actor.call(this);
};
$hxClasses["app.model.TodoModel"] = app_model_TodoModel;
app_model_TodoModel.__name__ = ["app","model","TodoModel"];
app_model_TodoModel.__super__ = mmvc_impl_Actor;
app_model_TodoModel.prototype = $extend(mmvc_impl_Actor.prototype,{
	findTodoByID: function(value) {
		var _g = 0;
		var _g1 = this._data;
		while(_g < _g1.length) {
			var todo = _g1[_g];
			++_g;
			if(todo.id == value) {
				return todo;
			}
		}
		return null;
	}
	,getTodoByIndex: function(value) {
		if(this._data.length > value) {
			return this._data[value];
		} else {
			return null;
		}
	}
	,getTodoPosition: function(todo) {
		return this._data.indexOf(todo);
	}
	,getTodos: function() {
		return this._data;
	}
	,toggleTodo: function(index,callback) {
		var todoVO = this.getTodoByIndex(index);
		var tmp = this._serverService;
		var tmp1 = this.SERVER_TODO_ROUTE + "/" + todoVO.id;
		var _g = new haxe_ds_StringMap();
		var value = todoVO.text;
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",value);
		} else {
			_g.h["text"] = value;
		}
		var value1 = !todoVO.completed;
		if(__map_reserved["completed"] != null) {
			_g.setReserved("completed",value1);
		} else {
			_g.h["completed"] = value1;
		}
		var value2 = todoVO.createdAt;
		if(__map_reserved["createdAt"] != null) {
			_g.setReserved("createdAt",value2);
		} else {
			_g.h["createdAt"] = value2;
		}
		tmp.performRequest(tmp1,yloader_enums_Method.PUT,function(error,result) {
			haxe_Log.trace("-> updateTodo: error = " + error + " result = " + Std.string(result),{ fileName : "TodoModel.hx", lineNumber : 31, className : "app.model.TodoModel", methodName : "toggleTodo"});
			var success = error == null;
			if(success) {
				todoVO.completed = !todoVO.completed;
			}
			callback(success);
		},_g);
	}
	,updateTodo: function(index,text,callback) {
		haxe_Log.trace("-> updateTodo: index = " + index + " text = " + text,{ fileName : "TodoModel.hx", lineNumber : 47, className : "app.model.TodoModel", methodName : "updateTodo"});
		var todoVO = this.getTodoByIndex(index);
		var tmp = this._serverService;
		var tmp1 = this.SERVER_TODO_ROUTE + "/" + todoVO.id;
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",text);
		} else {
			_g.h["text"] = text;
		}
		var value = todoVO.completed;
		if(__map_reserved["completed"] != null) {
			_g.setReserved("completed",value);
		} else {
			_g.h["completed"] = value;
		}
		var value1 = todoVO.createdAt;
		if(__map_reserved["createdAt"] != null) {
			_g.setReserved("createdAt",value1);
		} else {
			_g.h["createdAt"] = value1;
		}
		tmp.performRequest(tmp1,yloader_enums_Method.PUT,function(error,result) {
			haxe_Log.trace("-> updateTodo: error = " + error + " result = " + Std.string(result),{ fileName : "TodoModel.hx", lineNumber : 57, className : "app.model.TodoModel", methodName : "updateTodo"});
			todoVO.text = text;
			callback(error == null);
		},_g);
	}
	,createTodo: function(text,callback) {
		var _gthis = this;
		haxe_Log.trace("-> createTodo: text = " + text,{ fileName : "TodoModel.hx", lineNumber : 71, className : "app.model.TodoModel", methodName : "createTodo"});
		var tmp = this._serverService;
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",text);
		} else {
			_g.h["text"] = text;
		}
		if(__map_reserved["completed"] != null) {
			_g.setReserved("completed",false);
		} else {
			_g.h["completed"] = false;
		}
		tmp.performRequest(this.SERVER_TODO_ROUTE,yloader_enums_Method.POST,function(error,result) {
			if(error != null) {
				callback(null);
			} else {
				var todoVO = new data_vo_Todo(result.id,result.text,result.completed && result.completed != "false",result.createdAt != null ? result.createdAt : -1);
				_gthis._data.push(todoVO);
				callback(todoVO);
			}
		},_g);
	}
	,deleteTodo: function(index,callback) {
		var _gthis = this;
		haxe_Log.trace("-> deleteTodo: id = " + index,{ fileName : "TodoModel.hx", lineNumber : 99, className : "app.model.TodoModel", methodName : "deleteTodo"});
		var todoVO = this.getTodoByIndex(index);
		this._serverService.performRequest(this.SERVER_TODO_ROUTE + "/" + todoVO.id,yloader_enums_Method.DELETE,function(error,result) {
			var success = error == null;
			HxOverrides.remove(_gthis._data,todoVO);
			callback(success);
		});
	}
	,loadTodos: function(callback) {
		var _gthis = this;
		haxe_Log.trace("-> loadTodos",{ fileName : "TodoModel.hx", lineNumber : 118, className : "app.model.TodoModel", methodName : "loadTodos"});
		this._serverService.performRequest(this.SERVER_TODO_ROUTE,yloader_enums_Method.GET,function(error,result) {
			if(error != null) {
				callback(null);
			} else {
				var iter = HxOverrides.iter(result);
				var item;
				while(iter.hasNext()) {
					item = iter.next();
					_gthis._data.push(new data_vo_Todo(item.id,item.text,item.completed && item.completed != "false",item.createdAt != null ? item.createdAt : -1));
				}
				callback(_gthis._data);
			}
		});
	}
	,__class__: app_model_TodoModel
});
var app_model_service_ServerService = function() {
};
$hxClasses["app.model.service.ServerService"] = app_model_service_ServerService;
app_model_service_ServerService.__name__ = ["app","model","service","ServerService"];
app_model_service_ServerService.getInstance = function() {
	return app_model_service_ServerService.__instance;
};
app_model_service_ServerService.prototype = {
	performRequest: function(endpoint,method,callback,params) {
		var request = new yloader_valueObject_Request(endpoint);
		var loader = new yloader_impl_js_XMLHttpRequestLoader(request);
		request.method = method;
		loader.onResponse = function(response) {
			haxe_Timer.delay(function() {
				var resultMessage = response.success ? null : response.statusText;
				var resultData = null;
				try {
					resultData = JSON.parse(response.data);
				} catch( e ) {
					resultMessage = app_model_service_ServerService.ERRRO_PARSING_INCOME_DATA;
				}
				callback(resultMessage,resultData);
			},100 + (Math.random() * 1000 | 0));
		};
		if(params != null) {
			this.addRequestParams(request,params);
		}
		haxe_Log.trace("-> performRequest: " + request.url,{ fileName : "ServerService.hx", lineNumber : 39, className : "app.model.service.ServerService", methodName : "performRequest", customParams : [method,callback]});
		loader.withCredentials = true;
		loader.load();
	}
	,addRequestParams: function(request,params) {
		var keys = params.keys();
		var next = keys.hasNext();
		var json = { };
		request.setHeader(new yloader_valueObject_Parameter("Content-type","application/json; charset=utf-8"));
		while(next) {
			var key = keys.next();
			next = keys.hasNext();
			json[key] = __map_reserved[key] != null ? params.getReserved(key) : params.h[key];
		}
		request.data = JSON.stringify(json);
	}
	,__class__: app_model_service_ServerService
};
var core_view_MediatedComponent = function(props) {
	this.event = new msignal_Signal2();
	core_view_Component.call(this,props);
};
$hxClasses["core.view.MediatedComponent"] = core_view_MediatedComponent;
core_view_MediatedComponent.__name__ = ["core","view","MediatedComponent"];
core_view_MediatedComponent.__super__ = core_view_Component;
core_view_MediatedComponent.prototype = $extend(core_view_Component.prototype,{
	componentDidMount: function() {
		if(this.props.root != null) {
			this.props.root.onViewAdded(this);
		}
	}
	,componentWillUnmount: function() {
		if(this.props.root != null) {
			this.props.root.onViewRemoved(this);
		}
	}
	,__class__: core_view_MediatedComponent
});
var app_view_components_TodoForm = function(props) {
	this.addTodoButtonClickSignal = new msignal_Signal1();
	core_view_MediatedComponent.call(this,props);
};
$hxClasses["app.view.components.TodoForm"] = app_view_components_TodoForm;
app_view_components_TodoForm.__name__ = ["app","view","components","TodoForm"];
app_view_components_TodoForm.__super__ = core_view_MediatedComponent;
app_view_components_TodoForm.prototype = $extend(core_view_MediatedComponent.prototype,{
	defaultState: function() {
		return { text : "", isLocked : false};
	}
	,handleInputOnChange: function(event) {
		this.setState({ text : event.target.value});
	}
	,handleAddTodoButtonClick: function(event) {
		this.addTodoButtonClickSignal.dispatch(this.state.text);
	}
	,handleEnter: function(event) {
		if(event.key == "Enter") {
			this.handleAddTodoButtonClick(event);
		}
	}
	,render: function() {
		var lockedClassName = this.state.isLocked ? "-locked" : "";
		return React.createElement("div",{ className : this.getClassName() + lockedClassName},this.renderInputText(),this.renderButton());
	}
	,renderButton: function() {
		return React.createElement("button",{ onClick : $bind(this,this.handleAddTodoButtonClick), className : this.getClassName() + "-btn-add"},"+");
	}
	,renderInputText: function() {
		return React.createElement("input",{ type : "text", onChange : $bind(this,this.handleInputOnChange), onKeyPress : $bind(this,this.handleEnter), value : this.state.text, className : this.getClassName() + "-inp-txt"});
	}
	,lock: function() {
		this.setState({ isLocked : true});
	}
	,unlock: function() {
		this.setState({ isLocked : false});
	}
	,clear: function() {
		this.setState({ text : ""});
	}
	,__class__: app_view_components_TodoForm
});
var app_view_components_TodoList = function(props) {
	core_view_MediatedComponent.call(this,props);
	this.event.add($bind(this,this.handleTodoListItemEvent));
};
$hxClasses["app.view.components.TodoList"] = app_view_components_TodoList;
app_view_components_TodoList.__name__ = ["app","view","components","TodoList"];
app_view_components_TodoList.__super__ = core_view_MediatedComponent;
app_view_components_TodoList.prototype = $extend(core_view_MediatedComponent.prototype,{
	setTodos: function(value) {
		this.setState({ todos : value});
	}
	,defaultState: function() {
		return { todos : []};
	}
	,render: function() {
		var length = this.state.todos.length;
		return React.createElement("div",{ className : this.getClassName()},length > 0 ? this.state.todos : this.renderLoading());
	}
	,renderLoading: function() {
		return React.createElement("div",{ className : "loading"},"LOADING ...");
	}
	,createTodoListItem: function(index,id,text,completed) {
		return React.createElement(app_view_components_todolist_TodoListItem,{ key : id, text : text, index : index, isCompleted : completed, event : this.event});
	}
	,handleTodoListItemEvent: function(event,data) {
		haxe_Log.trace("event : " + event,{ fileName : "TodoList.hx", lineNumber : 55, className : "app.view.components.TodoList", methodName : "handleTodoListItemEvent"});
	}
	,__class__: app_view_components_TodoList
});
var app_view_components_popups_InfoPopup = function(props) {
	this.message = "";
	this.animationCompleteSignal = new msignal_Signal0();
	core_view_MediatedComponent.call(this,props);
};
$hxClasses["app.view.components.popups.InfoPopup"] = app_view_components_popups_InfoPopup;
app_view_components_popups_InfoPopup.__name__ = ["app","view","components","popups","InfoPopup"];
app_view_components_popups_InfoPopup.__super__ = core_view_MediatedComponent;
app_view_components_popups_InfoPopup.prototype = $extend(core_view_MediatedComponent.prototype,{
	set_message: function(value) {
		if(this.message != value) {
			this.message = value;
			this.setState({ message : value});
		}
		return value;
	}
	,get_animationClassName: function() {
		return this.getClassName() + "-animation";
	}
	,defaultState: function() {
		return { message : this.message};
	}
	,render: function() {
		var _gthis = this;
		return React.createElement("div",{ className : this.getClassName(), onAnimationEnd : $bind(this,this.onAnimationEnd), ref : function(dom) {
			_gthis.domInfoPopup = dom;
		}, children : this.state.message});
	}
	,isActive: function() {
		return this.state.message.length > 0;
	}
	,componentDidUpdate: function(prevProps,prevState) {
		var _gthis = this;
		if(this.isActive()) {
			this.domInfoPopup.addEventListener("animationend",$bind(this,this.handlerAnimationEnd),false);
			haxe_Timer.delay(function() {
				_gthis.domInfoPopup.classList.add(_gthis.get_animationClassName());
			},0);
		}
	}
	,componentWillUnmount: function() {
		this.domInfoPopup.removeEventListener("animationend",$bind(this,this.handlerAnimationEnd));
		core_view_MediatedComponent.prototype.componentWillUnmount.call(this);
	}
	,handlerAnimationEnd: function() {
		this.domInfoPopup.classList.remove(this.get_animationClassName());
		this.animationCompleteSignal.dispatch();
	}
	,onAnimationEnd: function() {
		haxe_Log.trace("ontransition end",{ fileName : "InfoPopup.hx", lineNumber : 74, className : "app.view.components.popups.InfoPopup", methodName : "onAnimationEnd"});
	}
	,__class__: app_view_components_popups_InfoPopup
	,__properties__: {get_animationClassName:"get_animationClassName",set_message:"set_message"}
});
var app_view_components_todolist_TodoListItem = function(props) {
	core_view_Component.call(this,props);
};
$hxClasses["app.view.components.todolist.TodoListItem"] = app_view_components_todolist_TodoListItem;
app_view_components_todolist_TodoListItem.__name__ = ["app","view","components","todolist","TodoListItem"];
app_view_components_todolist_TodoListItem.__super__ = core_view_Component;
app_view_components_todolist_TodoListItem.prototype = $extend(core_view_Component.prototype,{
	defaultState: function() {
		return { text : this.props.text, isLocked : false, isEditing : false, isCompleted : this.props.isCompleted};
	}
	,render: function() {
		return React.createElement("div",{ key : this.props.key, className : this.getClassName()},this.renderDeleteButton(),this.renderCompletionToggle(),this.renderTextField());
	}
	,componentWillUpdate: function(nextProps,nextState) {
		if(this.state.isLocked) {
			this.lock(false);
		}
		if(nextProps.text != this.props.text) {
			this.edit(false);
		}
		if(nextProps.isCompleted != this.state.isCompleted) {
			this.complete(nextProps.isCompleted);
		}
		if(nextProps.text != this.state.text && !this.state.isEditing) {
			this.update(nextProps.text);
		}
	}
	,shouldComponentUpdate: function(nextProps,nextState) {
		var shouldBeUpdated = nextProps.text != this.props.text || nextProps.isCompleted != this.props.isCompleted || (nextState.text != this.state.text || nextState.isLocked != this.state.isLocked || nextState.isEditing != this.state.isEditing || nextState.isCompleted != this.state.isCompleted);
		haxe_Log.trace("Component should be updated: " + (shouldBeUpdated == null ? "null" : "" + shouldBeUpdated),{ fileName : "TodoListItem.hx", lineNumber : 57, className : "app.view.components.todolist.TodoListItem", methodName : "shouldComponentUpdate"});
		return shouldBeUpdated;
	}
	,getClassName: function() {
		return core_view_Component.prototype.getClassName.call(this) + (this.state.isLocked ? " locked" : "");
	}
	,renderDeleteButton: function() {
		return React.createElement("button",{ className : "button", onClick : $bind(this,this.handleButton)},this.state.isEditing ? "@" : "x");
	}
	,renderTextField: function() {
		var className = "text" + (this.state.isCompleted ? " completed" : "");
		return React.createElement("input",{ type : "text", className : className, onChange : $bind(this,this.handleChange), value : this.state.text});
	}
	,renderCompletionToggle: function() {
		var className = "toggle" + (this.state.isEditing ? " disabled" : "");
		return React.createElement("input",{ type : "checkbox", checked : this.state.isCompleted, className : className, onChange : $bind(this,this.handleToggle)});
	}
	,handleChange: function(event) {
		var text = event.target.value;
		this.edit(text != this.props.text);
		this.update(text);
	}
	,handleButton: function() {
		this.lock(true);
		if(this.state.isEditing) {
			this.props.event.dispatch(enums_events_TodoListEvent.UPDATE_TODO,new data_dto_todoListItem_TodoListItemUpdateDTO(this.props.index,this.state.text));
		} else {
			this.props.event.dispatch(enums_events_TodoListEvent.DELETE_TODO,new data_dto_todoListItem_TodoListItemDeleteDTO(this.props.index));
		}
	}
	,handleToggle: function(event) {
		event.preventDefault();
		this.lock(true);
		this.props.event.dispatch(enums_events_TodoListEvent.TOGGLE_TODO,new data_dto_todoListItem_TodoListItemToggleDTO(this.props.index));
	}
	,edit: function(value) {
		this.setState({ isEditing : value});
	}
	,lock: function(value) {
		this.setState({ isLocked : value});
	}
	,complete: function(value) {
		this.setState({ isCompleted : value});
	}
	,update: function(value) {
		this.setState({ text : value});
	}
	,__class__: app_view_components_todolist_TodoListItem
});
var mmvc_api_IMediator = function() { };
$hxClasses["mmvc.api.IMediator"] = mmvc_api_IMediator;
mmvc_api_IMediator.__name__ = ["mmvc","api","IMediator"];
mmvc_api_IMediator.prototype = {
	__class__: mmvc_api_IMediator
};
var mmvc_base_MediatorBase = function() {
	this.slots = [];
};
$hxClasses["mmvc.base.MediatorBase"] = mmvc_base_MediatorBase;
mmvc_base_MediatorBase.__name__ = ["mmvc","base","MediatorBase"];
mmvc_base_MediatorBase.__interfaces__ = [mmvc_api_IMediator];
mmvc_base_MediatorBase.prototype = {
	preRegister: function() {
		this.removed = false;
		this.onRegister();
	}
	,onRegister: function() {
	}
	,preRemove: function() {
		this.removed = true;
		this.onRemove();
	}
	,onRemove: function() {
		var _g = 0;
		var _g1 = this.slots;
		while(_g < _g1.length) {
			var slot = _g1[_g];
			++_g;
			slot.remove();
		}
	}
	,getViewComponent: function() {
		return this.view;
	}
	,setViewComponent: function(viewComponent) {
		this.view = viewComponent;
	}
	,mediate: function(slot) {
		this.slots.push(slot);
	}
	,__class__: mmvc_base_MediatorBase
};
var mmvc_impl_Mediator = function() {
	mmvc_base_MediatorBase.call(this);
};
$hxClasses["mmvc.impl.Mediator"] = mmvc_impl_Mediator;
mmvc_impl_Mediator.__name__ = ["mmvc","impl","Mediator"];
mmvc_impl_Mediator.__super__ = mmvc_base_MediatorBase;
mmvc_impl_Mediator.prototype = $extend(mmvc_base_MediatorBase.prototype,{
	__class__: mmvc_impl_Mediator
});
var app_view_mediators_InfoPopupMediator = function() {
	mmvc_impl_Mediator.call(this);
};
$hxClasses["app.view.mediators.InfoPopupMediator"] = app_view_mediators_InfoPopupMediator;
app_view_mediators_InfoPopupMediator.__name__ = ["app","view","mediators","InfoPopupMediator"];
app_view_mediators_InfoPopupMediator.__super__ = mmvc_impl_Mediator;
app_view_mediators_InfoPopupMediator.prototype = $extend(mmvc_impl_Mediator.prototype,{
	onRegister: function() {
		mmvc_impl_Mediator.prototype.onRegister.call(this);
		this.mediate(this.view.animationCompleteSignal.add($bind(this,this.handleAnimationComplete)));
		this.mediate(this.messageModel.messageAddedSignal.add($bind(this,this.handleMessage)));
	}
	,handleMessage: function(text) {
		this.messageModel.set_isMessageAnimating(true);
		this.view.set_message(text);
	}
	,handleAnimationComplete: function() {
		haxe_Log.trace("handleAnimationComplete: messages = " + this.messageModel.get_length(),{ fileName : "InfoPopupMediator.hx", lineNumber : 27, className : "app.view.mediators.InfoPopupMediator", methodName : "handleAnimationComplete"});
		this.messageModel.set_isMessageAnimating(false);
	}
	,__class__: app_view_mediators_InfoPopupMediator
});
var app_view_mediators_TodoFormMediator = function() {
	mmvc_impl_Mediator.call(this);
};
$hxClasses["app.view.mediators.TodoFormMediator"] = app_view_mediators_TodoFormMediator;
app_view_mediators_TodoFormMediator.__name__ = ["app","view","mediators","TodoFormMediator"];
app_view_mediators_TodoFormMediator.__super__ = mmvc_impl_Mediator;
app_view_mediators_TodoFormMediator.prototype = $extend(mmvc_impl_Mediator.prototype,{
	onRegister: function() {
		mmvc_impl_Mediator.prototype.onRegister.call(this);
		this.mediate(this.notificationsSignal.add($bind(this,this.handleNotification)));
		this.mediate(this.view.addTodoButtonClickSignal.add($bind(this,this.handleAddTodo)));
	}
	,handleNotification: function(type,data) {
		if(type == app_controller_signals_TodoFormMediatorNotificationSignal.CLEAR_FORM) {
			this.view.clear();
		}
	}
	,handleAddTodo: function(text) {
		this.view.lock();
		this.createTodoSignal.complete.addOnce($bind(this,this.createTodoComplete));
		this.createTodoSignal.dispatch(text);
	}
	,createTodoComplete: function(success) {
		this.view.unlock();
	}
	,__class__: app_view_mediators_TodoFormMediator
});
var app_view_mediators_TodoListMediator = function() {
	mmvc_impl_Mediator.call(this);
};
$hxClasses["app.view.mediators.TodoListMediator"] = app_view_mediators_TodoListMediator;
app_view_mediators_TodoListMediator.__name__ = ["app","view","mediators","TodoListMediator"];
app_view_mediators_TodoListMediator.__super__ = mmvc_impl_Mediator;
app_view_mediators_TodoListMediator.prototype = $extend(mmvc_impl_Mediator.prototype,{
	onRegister: function() {
		mmvc_impl_Mediator.prototype.onRegister.call(this);
		this.mediate(this.todoListMediatorNotificationSignal.add($bind(this,this.handleNotification)));
		this.mediate(this.view.event.addWithPriority($bind(this,this.handleViewEvents),-1));
	}
	,handleViewEvents: function(event,data1) {
		haxe_Log.trace("> handleViewEvents: event = " + event + " | data = " + Std.string(data1),{ fileName : "TodoListMediator.hx", lineNumber : 39, className : "app.view.mediators.TodoListMediator", methodName : "handleViewEvents"});
		if(event == enums_events_TodoListEvent.TOGGLE_TODO) {
			var value = data1;
			this.processTodoEventToggle((value instanceof data_dto_todoListItem_TodoListItemToggleDTO) ? value : null);
		} else if(event == enums_events_TodoListEvent.DELETE_TODO) {
			var value1 = data1;
			this.processTodoEventDelete((value1 instanceof data_dto_todoListItem_TodoListItemDeleteDTO) ? value1 : null);
		} else if(event == enums_events_TodoListEvent.UPDATE_TODO) {
			var value2 = data1;
			this.processTodoEventUpdate((value2 instanceof data_dto_todoListItem_TodoListItemUpdateDTO) ? value2 : null);
		}
	}
	,handleNotification: function(type,data) {
		var _gthis = this;
		haxe_Log.trace("> handleNotification: type = " + type,{ fileName : "TodoListMediator.hx", lineNumber : 52, className : "app.view.mediators.TodoListMediator", methodName : "handleNotification"});
		if(type == app_controller_signals_TodoListMediatorNotificationSignal.SETUP_TODOS) {
			var todos = data;
			var result = [];
			var index = 0;
			result = todos.map(function(todo) {
				index += 1;
				return _gthis.view.createTodoListItem(index - 1,todo.id,todo.text,todo.completed);
			});
			this.view.setTodos(result);
		}
	}
	,processTodoEventToggle: function(vo) {
		this.toggleTodoSignal.dispatch(vo.index);
	}
	,processTodoEventDelete: function(vo) {
		this.deleteTodoSignal.dispatch(vo.index);
	}
	,processTodoEventUpdate: function(vo) {
		this.updateTodoSignal.dispatch(vo.index,vo.text);
	}
	,__class__: app_view_mediators_TodoListMediator
});
var data_dto_todoListItem_TodoListItemDeleteDTO = function(index) {
	this.index = index;
};
$hxClasses["data.dto.todoListItem.TodoListItemDeleteDTO"] = data_dto_todoListItem_TodoListItemDeleteDTO;
data_dto_todoListItem_TodoListItemDeleteDTO.__name__ = ["data","dto","todoListItem","TodoListItemDeleteDTO"];
data_dto_todoListItem_TodoListItemDeleteDTO.prototype = {
	__class__: data_dto_todoListItem_TodoListItemDeleteDTO
};
var data_dto_todoListItem_TodoListItemToggleDTO = function(index) {
	this.index = index;
};
$hxClasses["data.dto.todoListItem.TodoListItemToggleDTO"] = data_dto_todoListItem_TodoListItemToggleDTO;
data_dto_todoListItem_TodoListItemToggleDTO.__name__ = ["data","dto","todoListItem","TodoListItemToggleDTO"];
data_dto_todoListItem_TodoListItemToggleDTO.prototype = {
	__class__: data_dto_todoListItem_TodoListItemToggleDTO
};
var data_dto_todoListItem_TodoListItemUpdateDTO = function(index,text) {
	this.index = index;
	this.text = text;
};
$hxClasses["data.dto.todoListItem.TodoListItemUpdateDTO"] = data_dto_todoListItem_TodoListItemUpdateDTO;
data_dto_todoListItem_TodoListItemUpdateDTO.__name__ = ["data","dto","todoListItem","TodoListItemUpdateDTO"];
data_dto_todoListItem_TodoListItemUpdateDTO.prototype = {
	__class__: data_dto_todoListItem_TodoListItemUpdateDTO
};
var data_vo_Todo = function(id,text,completed,createdAt) {
	this.id = id;
	this.text = text;
	this.completed = completed;
	this.createdAt = createdAt;
};
$hxClasses["data.vo.Todo"] = data_vo_Todo;
data_vo_Todo.__name__ = ["data","vo","Todo"];
data_vo_Todo.prototype = {
	toggle: function() {
		return new data_vo_Todo(this.id,this.text,!this.completed,this.createdAt);
	}
	,__class__: data_vo_Todo
};
var enums_events_TodoListEvent = function() { };
$hxClasses["enums.events.TodoListEvent"] = enums_events_TodoListEvent;
enums_events_TodoListEvent.__name__ = ["enums","events","TodoListEvent"];
var enums_network_ServerAPI = function() { };
$hxClasses["enums.network.ServerAPI"] = enums_network_ServerAPI;
enums_network_ServerAPI.__name__ = ["enums","network","ServerAPI"];
var enums_strings_MessageStrings = function() { };
$hxClasses["enums.strings.MessageStrings"] = enums_strings_MessageStrings;
enums_strings_MessageStrings.__name__ = ["enums","strings","MessageStrings"];
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var keys = this.arrayKeys();
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var k = keys[i];
			s_b += k == null ? "null" : "" + k;
			s_b += " => ";
			s_b += Std.string(Std.string(__map_reserved[k] != null ? this.getReserved(k) : this.h[k]));
			if(i < keys.length - 1) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getType = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.obj == null) {
		return { };
	} else {
		return meta.obj;
	}
};
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var minject_ClassMap = function() {
	this.map = new haxe_ds_StringMap();
};
$hxClasses["minject.ClassMap"] = minject_ClassMap;
minject_ClassMap.__name__ = ["minject","ClassMap"];
minject_ClassMap.__interfaces__ = [haxe_IMap];
minject_ClassMap.prototype = {
	get: function(k) {
		var this1 = this.map;
		var key = Type.getClassName(k);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,set: function(k,v) {
		var this1 = this.map;
		var key = Type.getClassName(k);
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,v);
		} else {
			_this.h[key] = v;
		}
	}
	,exists: function(k) {
		var this1 = this.map;
		var key = Type.getClassName(k);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.existsReserved(key);
		} else {
			return _this.h.hasOwnProperty(key);
		}
	}
	,remove: function(k) {
		return this.map.remove(Type.getClassName(k));
	}
	,keys: function() {
		var _g = [];
		var k = this.map.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			_g.push(Type.resolveClass(k1));
		}
		return HxOverrides.iter(_g);
	}
	,iterator: function() {
		var _this = this.map;
		return new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	}
	,toString: function() {
		return this.map.toString();
	}
	,getKey: function(k) {
		return Type.getClassName(k);
	}
	,__class__: minject_ClassMap
};
var minject_InjectionConfig = function(request,injectionName) {
	this.request = request;
	this.injectionName = injectionName;
};
$hxClasses["minject.InjectionConfig"] = minject_InjectionConfig;
minject_InjectionConfig.__name__ = ["minject","InjectionConfig"];
minject_InjectionConfig.prototype = {
	getResponse: function(injector) {
		if(this.injector != null) {
			injector = this.injector;
		}
		if(this.result != null) {
			return this.result.getResponse(injector);
		}
		var parentConfig = injector.getAncestorMapping(this.request,this.injectionName);
		if(parentConfig != null) {
			return parentConfig.getResponse(injector);
		}
		return null;
	}
	,hasResponse: function(injector) {
		return this.result != null;
	}
	,hasOwnResponse: function() {
		return this.result != null;
	}
	,setResult: function(result) {
		if(this.result != null && result != null) {
			haxe_Log.trace("Warning: Injector contains " + this.toString() + ".\nAttempting to overwrite this " + ("with mapping for [" + result.toString() + "].\nIf you have overwritten this mapping ") + "intentionally you can use `injector.unmap()` prior to your replacement mapping " + "in order to avoid seeing this message.",{ fileName : "InjectionConfig.hx", lineNumber : 68, className : "minject.InjectionConfig", methodName : "setResult"});
		}
		this.result = result;
	}
	,setInjector: function(injector) {
		this.injector = injector;
	}
	,toString: function() {
		var named = this.injectionName != null && this.injectionName != "" ? " named \"" + this.injectionName + "\" and" : "";
		return "rule: [" + Type.getClassName(this.request) + ("]" + named + " mapped to [" + Std.string(this.result) + "]");
	}
	,__class__: minject_InjectionConfig
};
var minject_Injector = function() {
	this.injectionConfigs = new haxe_ds_StringMap();
	this.injecteeDescriptions = new minject_ClassMap();
	this.attendedToInjectees = new minject_InjecteeSet();
};
$hxClasses["minject.Injector"] = minject_Injector;
minject_Injector.__name__ = ["minject","Injector"];
minject_Injector.prototype = {
	mapValue: function(whenAskedFor,useValue,named) {
		if(named == null) {
			named = "";
		}
		var config = this.getMapping(whenAskedFor,named);
		config.setResult(new minject_result_InjectValueResult(useValue));
		return config;
	}
	,mapClass: function(whenAskedFor,instantiateClass,named) {
		if(named == null) {
			named = "";
		}
		var config = this.getMapping(whenAskedFor,named);
		config.setResult(new minject_result_InjectClassResult(instantiateClass));
		return config;
	}
	,mapSingleton: function(whenAskedFor,named) {
		if(named == null) {
			named = "";
		}
		return this.mapSingletonOf(whenAskedFor,whenAskedFor,named);
	}
	,mapSingletonOf: function(whenAskedFor,useSingletonOf,named) {
		if(named == null) {
			named = "";
		}
		var config = this.getMapping(whenAskedFor,named);
		config.setResult(new minject_result_InjectSingletonResult(useSingletonOf));
		return config;
	}
	,mapRule: function(whenAskedFor,useRule,named) {
		if(named == null) {
			named = "";
		}
		var config = this.getMapping(whenAskedFor,named);
		config.setResult(new minject_result_InjectOtherRuleResult(useRule));
		return useRule;
	}
	,getMapping: function(forClass,named) {
		if(named == null) {
			named = "";
		}
		var requestName = this.getClassName(forClass) + "#" + named;
		var _this = this.injectionConfigs;
		if(__map_reserved[requestName] != null ? _this.existsReserved(requestName) : _this.h.hasOwnProperty(requestName)) {
			var _this1 = this.injectionConfigs;
			if(__map_reserved[requestName] != null) {
				return _this1.getReserved(requestName);
			} else {
				return _this1.h[requestName];
			}
		}
		var config = new minject_InjectionConfig(forClass,named);
		var _this2 = this.injectionConfigs;
		if(__map_reserved[requestName] != null) {
			_this2.setReserved(requestName,config);
		} else {
			_this2.h[requestName] = config;
		}
		return config;
	}
	,injectInto: function(target) {
		if(this.attendedToInjectees.contains(target)) {
			return;
		}
		this.attendedToInjectees.add(target);
		var o = target;
		var targetClass = o == null ? null : js_Boot.getClass(o);
		var injecteeDescription = null;
		if(this.injecteeDescriptions.exists(targetClass)) {
			injecteeDescription = this.injecteeDescriptions.get(targetClass);
		} else {
			injecteeDescription = this.getInjectionPoints(targetClass);
		}
		if(injecteeDescription == null) {
			return;
		}
		var injectionPoints = injecteeDescription.injectionPoints;
		var length = injectionPoints.length;
		var _g1 = 0;
		var _g = length;
		while(_g1 < _g) {
			var i = _g1++;
			var injectionPoint = injectionPoints[i];
			injectionPoint.applyInjection(target,this);
		}
	}
	,construct: function(theClass) {
		var injecteeDescription;
		if(this.injecteeDescriptions.exists(theClass)) {
			injecteeDescription = this.injecteeDescriptions.get(theClass);
		} else {
			injecteeDescription = this.getInjectionPoints(theClass);
		}
		var injectionPoint = injecteeDescription.ctor;
		return injectionPoint.applyInjection(theClass,this);
	}
	,instantiate: function(theClass) {
		var instance = this.construct(theClass);
		this.injectInto(instance);
		return instance;
	}
	,unmap: function(theClass,named) {
		if(named == null) {
			named = "";
		}
		var mapping = this.getConfigurationForRequest(theClass,named);
		if(mapping == null) {
			throw new js__$Boot_HaxeError("Error while removing an injector mapping: No mapping defined for class " + this.getClassName(theClass) + ", named \"" + named + "\"");
		}
		mapping.setResult(null);
	}
	,hasMapping: function(forClass,named) {
		if(named == null) {
			named = "";
		}
		var mapping = this.getConfigurationForRequest(forClass,named);
		if(mapping == null) {
			return false;
		}
		return mapping.hasResponse(this);
	}
	,getInstance: function(ofClass,named) {
		if(named == null) {
			named = "";
		}
		var mapping = this.getConfigurationForRequest(ofClass,named);
		if(mapping == null || !mapping.hasResponse(this)) {
			throw new js__$Boot_HaxeError("Error while getting mapping response: No mapping defined for class " + this.getClassName(ofClass) + ", named \"" + named + "\"");
		}
		return mapping.getResponse(this);
	}
	,createChildInjector: function() {
		var injector = new minject_Injector();
		injector.set_parentInjector(this);
		return injector;
	}
	,getAncestorMapping: function(forClass,named) {
		var parent = this.parentInjector;
		while(parent != null) {
			var parentConfig = parent.getConfigurationForRequest(forClass,named,false);
			if(parentConfig != null && parentConfig.hasOwnResponse()) {
				return parentConfig;
			}
			parent = parent.parentInjector;
		}
		return null;
	}
	,getInjectionPoints: function(forClass) {
		var typeMeta = haxe_rtti_Meta.getType(forClass);
		if(typeMeta != null && Object.prototype.hasOwnProperty.call(typeMeta,"interface")) {
			throw new js__$Boot_HaxeError("Interfaces can't be used as instantiatable classes.");
		}
		var fieldsMeta = this.getFields(forClass);
		var ctorInjectionPoint = null;
		var injectionPoints = [];
		var postConstructMethodPoints = [];
		var _g = 0;
		var _g1 = Reflect.fields(fieldsMeta);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			var fieldMeta = Reflect.field(fieldsMeta,field);
			var inject = Object.prototype.hasOwnProperty.call(fieldMeta,"inject");
			var post = Object.prototype.hasOwnProperty.call(fieldMeta,"post");
			var type = Reflect.field(fieldMeta,"type");
			var args = Reflect.field(fieldMeta,"args");
			if(field == "_") {
				if(args.length > 0) {
					ctorInjectionPoint = new minject_point_ConstructorInjectionPoint(fieldMeta.args);
				}
			} else if(Object.prototype.hasOwnProperty.call(fieldMeta,"args")) {
				if(inject) {
					var point = new minject_point_MethodInjectionPoint(field,fieldMeta.args);
					injectionPoints.push(point);
				} else if(post) {
					var order = fieldMeta.post == null ? 0 : fieldMeta.post[0];
					var point1 = new minject_point_PostConstructInjectionPoint(field,order);
					postConstructMethodPoints.push(point1);
				}
			} else if(type != null) {
				var name = fieldMeta.inject == null ? null : fieldMeta.inject[0];
				var point2 = new minject_point_PropertyInjectionPoint(field,fieldMeta.type[0],name);
				injectionPoints.push(point2);
			}
		}
		if(postConstructMethodPoints.length > 0) {
			postConstructMethodPoints.sort(function(a,b) {
				return a.order - b.order;
			});
			var _g2 = 0;
			while(_g2 < postConstructMethodPoints.length) {
				var point3 = postConstructMethodPoints[_g2];
				++_g2;
				injectionPoints.push(point3);
			}
		}
		if(ctorInjectionPoint == null) {
			ctorInjectionPoint = new minject_point_NoParamsConstructorInjectionPoint();
		}
		var injecteeDescription = new minject_InjecteeDescription(ctorInjectionPoint,injectionPoints);
		this.injecteeDescriptions.set(forClass,injecteeDescription);
		return injecteeDescription;
	}
	,getConfigurationForRequest: function(forClass,named,traverseAncestors) {
		if(traverseAncestors == null) {
			traverseAncestors = true;
		}
		var requestName = this.getClassName(forClass) + "#" + named;
		var _this = this.injectionConfigs;
		if(!(__map_reserved[requestName] != null ? _this.existsReserved(requestName) : _this.h.hasOwnProperty(requestName))) {
			if(traverseAncestors && this.parentInjector != null && this.parentInjector.hasMapping(forClass,named)) {
				return this.getAncestorMapping(forClass,named);
			}
			return null;
		}
		var _this1 = this.injectionConfigs;
		if(__map_reserved[requestName] != null) {
			return _this1.getReserved(requestName);
		} else {
			return _this1.h[requestName];
		}
	}
	,set_parentInjector: function(value) {
		if(this.parentInjector != null && value == null) {
			this.attendedToInjectees = new minject_InjecteeSet();
		}
		this.parentInjector = value;
		if(this.parentInjector != null) {
			this.attendedToInjectees = this.parentInjector.attendedToInjectees;
		}
		return this.parentInjector;
	}
	,getClassName: function(forClass) {
		if(forClass == null) {
			return "Dynamic";
		} else {
			return Type.getClassName(forClass);
		}
	}
	,getFields: function(type) {
		var meta = { };
		while(type != null) {
			var typeMeta = haxe_rtti_Meta.getFields(type);
			var _g = 0;
			var _g1 = Reflect.fields(typeMeta);
			while(_g < _g1.length) {
				var field = _g1[_g];
				++_g;
				meta[field] = Reflect.field(typeMeta,field);
			}
			type = Type.getSuperClass(type);
		}
		return meta;
	}
	,__class__: minject_Injector
	,__properties__: {set_parentInjector:"set_parentInjector"}
};
var minject_InjecteeSet = function() {
};
$hxClasses["minject.InjecteeSet"] = minject_InjecteeSet;
minject_InjecteeSet.__name__ = ["minject","InjecteeSet"];
minject_InjecteeSet.prototype = {
	add: function(value) {
		value.__injected__ = true;
	}
	,contains: function(value) {
		return value.__injected__ == true;
	}
	,remove: function(value) {
		Reflect.deleteField(value,"__injected__");
	}
	,'delete': function(value) {
		this.remove(value);
	}
	,iterator: function() {
		return HxOverrides.iter([]);
	}
	,__class__: minject_InjecteeSet
};
var minject_InjecteeDescription = function(ctor,injectionPoints) {
	this.ctor = ctor;
	this.injectionPoints = injectionPoints;
};
$hxClasses["minject.InjecteeDescription"] = minject_InjecteeDescription;
minject_InjecteeDescription.__name__ = ["minject","InjecteeDescription"];
minject_InjecteeDescription.prototype = {
	__class__: minject_InjecteeDescription
};
var minject_Reflector = function() {
};
$hxClasses["minject.Reflector"] = minject_Reflector;
minject_Reflector.__name__ = ["minject","Reflector"];
minject_Reflector.prototype = {
	classExtendsOrImplements: function(classOrClassName,superClass) {
		var actualClass = null;
		if(js_Boot.__instanceof(classOrClassName,Class)) {
			actualClass = js_Boot.__cast(classOrClassName , Class);
		} else if(typeof(classOrClassName) == "string") {
			try {
				actualClass = Type.resolveClass(js_Boot.__cast(classOrClassName , String));
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				throw new js__$Boot_HaxeError("The class name " + Std.string(classOrClassName) + " is not valid because of " + Std.string(e) + "\n" + Std.string(e.getStackTrace()));
			}
		}
		if(actualClass == null) {
			throw new js__$Boot_HaxeError("The parameter classOrClassName must be a Class or fully qualified class name.");
		}
		var classInstance = Type.createEmptyInstance(actualClass);
		return js_Boot.__instanceof(classInstance,superClass);
	}
	,getClass: function(value) {
		if(js_Boot.__instanceof(value,Class)) {
			return value;
		}
		var o = value;
		if(o == null) {
			return null;
		} else {
			return js_Boot.getClass(o);
		}
	}
	,getFQCN: function(value) {
		var fqcn;
		if(typeof(value) == "string") {
			return js_Boot.__cast(value , String);
		}
		return Type.getClassName(value);
	}
	,__class__: minject_Reflector
};
var minject_point_InjectionPoint = function() { };
$hxClasses["minject.point.InjectionPoint"] = minject_point_InjectionPoint;
minject_point_InjectionPoint.__name__ = ["minject","point","InjectionPoint"];
minject_point_InjectionPoint.prototype = {
	__class__: minject_point_InjectionPoint
};
var minject_point_MethodInjectionPoint = function(name,args) {
	this.name = name;
	this.args = args;
	var _g = 0;
	while(_g < args.length) {
		var arg = args[_g];
		++_g;
		if(arg.type == "Dynamic") {
			throw new js__$Boot_HaxeError("Error in method definition of injectee. Required parameters can't have non class type.");
		}
	}
};
$hxClasses["minject.point.MethodInjectionPoint"] = minject_point_MethodInjectionPoint;
minject_point_MethodInjectionPoint.__name__ = ["minject","point","MethodInjectionPoint"];
minject_point_MethodInjectionPoint.__interfaces__ = [minject_point_InjectionPoint];
minject_point_MethodInjectionPoint.prototype = {
	applyInjection: function(target,injector) {
		var func = Reflect.field(target,this.name);
		var args = this.gatherArgs(target,injector);
		func.apply(target,args);
		return target;
	}
	,gatherArgs: function(target,injector) {
		var values = [];
		var _g = 0;
		var _g1 = this.args;
		while(_g < _g1.length) {
			var arg = _g1[_g];
			++_g;
			var name = arg.name == null ? "" : arg.name;
			var config = injector.getMapping(Type.resolveClass(arg.type),arg.name);
			var injection = config.getResponse(injector);
			if(injection == null && !arg.opt) {
				var o = target;
				var targetName = Type.getClassName(o == null ? null : js_Boot.getClass(o));
				var requestName = Type.getClassName(config.request);
				throw new js__$Boot_HaxeError("Injector is missing a rule to handle injection into target " + targetName + ". " + ("Target dependency: " + requestName + ", method: " + name + ", named: ") + arg.name);
			}
			values.push(injection);
		}
		return values;
	}
	,__class__: minject_point_MethodInjectionPoint
};
var minject_point_ConstructorInjectionPoint = function(args) {
	minject_point_MethodInjectionPoint.call(this,"new",args);
};
$hxClasses["minject.point.ConstructorInjectionPoint"] = minject_point_ConstructorInjectionPoint;
minject_point_ConstructorInjectionPoint.__name__ = ["minject","point","ConstructorInjectionPoint"];
minject_point_ConstructorInjectionPoint.__super__ = minject_point_MethodInjectionPoint;
minject_point_ConstructorInjectionPoint.prototype = $extend(minject_point_MethodInjectionPoint.prototype,{
	applyInjection: function(target,injector) {
		return Type.createInstance(target,this.gatherArgs(target,injector));
	}
	,__class__: minject_point_ConstructorInjectionPoint
});
var minject_point_NoParamsConstructorInjectionPoint = function() {
};
$hxClasses["minject.point.NoParamsConstructorInjectionPoint"] = minject_point_NoParamsConstructorInjectionPoint;
minject_point_NoParamsConstructorInjectionPoint.__name__ = ["minject","point","NoParamsConstructorInjectionPoint"];
minject_point_NoParamsConstructorInjectionPoint.__interfaces__ = [minject_point_InjectionPoint];
minject_point_NoParamsConstructorInjectionPoint.prototype = {
	applyInjection: function(target,injector) {
		return Type.createInstance(target,[]);
	}
	,__class__: minject_point_NoParamsConstructorInjectionPoint
};
var minject_point_PostConstructInjectionPoint = function(name,order) {
	if(order == null) {
		order = 0;
	}
	this.name = name;
	this.order = order;
};
$hxClasses["minject.point.PostConstructInjectionPoint"] = minject_point_PostConstructInjectionPoint;
minject_point_PostConstructInjectionPoint.__name__ = ["minject","point","PostConstructInjectionPoint"];
minject_point_PostConstructInjectionPoint.__interfaces__ = [minject_point_InjectionPoint];
minject_point_PostConstructInjectionPoint.prototype = {
	applyInjection: function(target,injector) {
		Reflect.field(target,this.name).apply(target,[]);
		return target;
	}
	,__class__: minject_point_PostConstructInjectionPoint
};
var minject_point_PropertyInjectionPoint = function(name,type,injectionName) {
	this.name = name;
	this.type = type;
	this.injectionName = injectionName;
};
$hxClasses["minject.point.PropertyInjectionPoint"] = minject_point_PropertyInjectionPoint;
minject_point_PropertyInjectionPoint.__name__ = ["minject","point","PropertyInjectionPoint"];
minject_point_PropertyInjectionPoint.__interfaces__ = [minject_point_InjectionPoint];
minject_point_PropertyInjectionPoint.prototype = {
	applyInjection: function(target,injector) {
		var injectionConfig = injector.getMapping(Type.resolveClass(this.type),this.injectionName);
		var injection = injectionConfig.getResponse(injector);
		if(injection == null) {
			throw new js__$Boot_HaxeError("Injector is missing a rule to handle injection into property \"" + this.name + "\" " + ("of object \"" + Std.string(target) + "\". Target dependency: \"" + this.type + "\", named \"" + this.injectionName + "\""));
		}
		Reflect.setProperty(target,this.name,injection);
		return target;
	}
	,__class__: minject_point_PropertyInjectionPoint
};
var minject_result_InjectionResult = function() {
};
$hxClasses["minject.result.InjectionResult"] = minject_result_InjectionResult;
minject_result_InjectionResult.__name__ = ["minject","result","InjectionResult"];
minject_result_InjectionResult.prototype = {
	getResponse: function(injector) {
		return null;
	}
	,toString: function() {
		return "";
	}
	,__class__: minject_result_InjectionResult
};
var minject_result_InjectClassResult = function(responseType) {
	minject_result_InjectionResult.call(this);
	this.responseType = responseType;
};
$hxClasses["minject.result.InjectClassResult"] = minject_result_InjectClassResult;
minject_result_InjectClassResult.__name__ = ["minject","result","InjectClassResult"];
minject_result_InjectClassResult.__super__ = minject_result_InjectionResult;
minject_result_InjectClassResult.prototype = $extend(minject_result_InjectionResult.prototype,{
	getResponse: function(injector) {
		return injector.instantiate(this.responseType);
	}
	,toString: function() {
		return "class " + Type.getClassName(this.responseType);
	}
	,__class__: minject_result_InjectClassResult
});
var minject_result_InjectOtherRuleResult = function(rule) {
	minject_result_InjectionResult.call(this);
	this.rule = rule;
};
$hxClasses["minject.result.InjectOtherRuleResult"] = minject_result_InjectOtherRuleResult;
minject_result_InjectOtherRuleResult.__name__ = ["minject","result","InjectOtherRuleResult"];
minject_result_InjectOtherRuleResult.__super__ = minject_result_InjectionResult;
minject_result_InjectOtherRuleResult.prototype = $extend(minject_result_InjectionResult.prototype,{
	getResponse: function(injector) {
		return this.rule.getResponse(injector);
	}
	,toString: function() {
		return this.rule.toString();
	}
	,__class__: minject_result_InjectOtherRuleResult
});
var minject_result_InjectSingletonResult = function(responseType) {
	minject_result_InjectionResult.call(this);
	this.responseType = responseType;
};
$hxClasses["minject.result.InjectSingletonResult"] = minject_result_InjectSingletonResult;
minject_result_InjectSingletonResult.__name__ = ["minject","result","InjectSingletonResult"];
minject_result_InjectSingletonResult.__super__ = minject_result_InjectionResult;
minject_result_InjectSingletonResult.prototype = $extend(minject_result_InjectionResult.prototype,{
	getResponse: function(injector) {
		if(this.response == null) {
			this.response = this.createResponse(injector);
			injector.injectInto(this.response);
		}
		return this.response;
	}
	,createResponse: function(injector) {
		return injector.construct(this.responseType);
	}
	,toString: function() {
		return "singleton " + Type.getClassName(this.responseType);
	}
	,__class__: minject_result_InjectSingletonResult
});
var minject_result_InjectValueResult = function(value) {
	minject_result_InjectionResult.call(this);
	this.value = value;
};
$hxClasses["minject.result.InjectValueResult"] = minject_result_InjectValueResult;
minject_result_InjectValueResult.__name__ = ["minject","result","InjectValueResult"];
minject_result_InjectValueResult.__super__ = minject_result_InjectionResult;
minject_result_InjectValueResult.prototype = $extend(minject_result_InjectionResult.prototype,{
	getResponse: function(injector) {
		return this.value;
	}
	,toString: function() {
		var o = this.value;
		return "instance of " + Type.getClassName(o == null ? null : js_Boot.getClass(o));
	}
	,__class__: minject_result_InjectValueResult
});
var mmvc_api_ICommandMap = function() { };
$hxClasses["mmvc.api.ICommandMap"] = mmvc_api_ICommandMap;
mmvc_api_ICommandMap.__name__ = ["mmvc","api","ICommandMap"];
mmvc_api_ICommandMap.prototype = {
	__class__: mmvc_api_ICommandMap
};
var mmvc_api_IMediatorMap = function() { };
$hxClasses["mmvc.api.IMediatorMap"] = mmvc_api_IMediatorMap;
mmvc_api_IMediatorMap.__name__ = ["mmvc","api","IMediatorMap"];
mmvc_api_IMediatorMap.prototype = {
	__class__: mmvc_api_IMediatorMap
	,__properties__: {set_enabled:"set_enabled",set_contextView:"set_contextView"}
};
var mmvc_api_ITriggerMap = function() { };
$hxClasses["mmvc.api.ITriggerMap"] = mmvc_api_ITriggerMap;
mmvc_api_ITriggerMap.__name__ = ["mmvc","api","ITriggerMap"];
mmvc_api_ITriggerMap.prototype = {
	__class__: mmvc_api_ITriggerMap
};
var mmvc_api_IViewMap = function() { };
$hxClasses["mmvc.api.IViewMap"] = mmvc_api_IViewMap;
mmvc_api_IViewMap.__name__ = ["mmvc","api","IViewMap"];
mmvc_api_IViewMap.prototype = {
	__class__: mmvc_api_IViewMap
	,__properties__: {set_enabled:"set_enabled",set_contextView:"set_contextView"}
};
var mmvc_base_CommandMap = function(injector) {
	this.injector = injector;
	this.signalMap = new haxe_ds_ObjectMap();
	this.signalClassMap = new minject_ClassMap();
	this.detainedCommands = new haxe_ds_ObjectMap();
};
$hxClasses["mmvc.base.CommandMap"] = mmvc_base_CommandMap;
mmvc_base_CommandMap.__name__ = ["mmvc","base","CommandMap"];
mmvc_base_CommandMap.__interfaces__ = [mmvc_api_ICommandMap];
mmvc_base_CommandMap.prototype = {
	mapSignalClass: function(signalClass,commandClass,oneShot) {
		if(oneShot == null) {
			oneShot = false;
		}
		var signal = this.getSignalClassInstance(signalClass);
		this.mapSignal(signal,commandClass,oneShot);
		return signal;
	}
	,mapSignal: function(signal,commandClass,oneShot) {
		if(oneShot == null) {
			oneShot = false;
		}
		if(this.hasSignalCommand(signal,commandClass)) {
			return;
		}
		var signalCommandMap;
		if(this.signalMap.h.__keys__[signal.__id__] != null) {
			signalCommandMap = this.signalMap.h[signal.__id__];
		} else {
			signalCommandMap = new minject_ClassMap();
			this.signalMap.set(signal,signalCommandMap);
		}
		var me = this;
		var callbackFunction = Reflect.makeVarArgs(function(args) {
			me.routeSignalToCommand(signal,args,commandClass,oneShot);
		});
		signalCommandMap.set(commandClass,callbackFunction);
		signal.add(callbackFunction);
	}
	,unmapSignalClass: function(signalClass,commandClass) {
		var signal = this.getSignalClassInstance(signalClass);
		this.unmapSignal(signal,commandClass);
		if(!this.hasCommand(signal)) {
			this.injector.unmap(signalClass);
			this.signalClassMap.remove(signalClass);
		}
	}
	,unmapSignal: function(signal,commandClass) {
		var callbacksByCommandClass = this.signalMap.h[signal.__id__];
		if(callbacksByCommandClass == null) {
			return;
		}
		var callbackFunction = callbacksByCommandClass.get(commandClass);
		if(callbackFunction == null) {
			return;
		}
		if(!this.hasCommand(signal)) {
			this.signalMap.remove(signal);
		}
		signal.remove(callbackFunction);
		callbacksByCommandClass.remove(commandClass);
	}
	,getSignalClassInstance: function(signalClass) {
		if(this.signalClassMap.exists(signalClass)) {
			return js_Boot.__cast(this.signalClassMap.get(signalClass) , msignal_Signal);
		}
		return this.createSignalClassInstance(signalClass);
	}
	,createSignalClassInstance: function(signalClass) {
		var injectorForSignalInstance = this.injector;
		if(this.injector.hasMapping(minject_Injector)) {
			injectorForSignalInstance = this.injector.getInstance(minject_Injector);
		}
		var signal = injectorForSignalInstance.instantiate(signalClass);
		injectorForSignalInstance.mapValue(signalClass,signal);
		this.signalClassMap.set(signalClass,signal);
		return signal;
	}
	,hasCommand: function(signal) {
		var callbacksByCommandClass = this.signalMap.h[signal.__id__];
		if(callbacksByCommandClass == null) {
			return false;
		}
		var count = 0;
		var key = callbacksByCommandClass.iterator();
		while(key.hasNext()) {
			var key1 = key.next();
			++count;
		}
		return count > 0;
	}
	,hasSignalCommand: function(signal,commandClass) {
		var callbacksByCommandClass = this.signalMap.h[signal.__id__];
		if(callbacksByCommandClass == null) {
			return false;
		}
		var callbackFunction = callbacksByCommandClass.get(commandClass);
		return callbackFunction != null;
	}
	,routeSignalToCommand: function(signal,valueObjects,commandClass,oneshot) {
		this.injector.mapValue(msignal_Signal,signal);
		this.mapSignalValues(signal.valueClasses,valueObjects);
		var command = this.createCommandInstance(commandClass);
		this.injector.unmap(msignal_Signal);
		this.unmapSignalValues(signal.valueClasses,valueObjects);
		command.execute();
		this.injector.attendedToInjectees.remove(command);
		if(oneshot) {
			this.unmapSignal(signal,commandClass);
		}
	}
	,createCommandInstance: function(commandClass) {
		return this.injector.instantiate(commandClass);
	}
	,mapSignalValues: function(valueClasses,valueObjects) {
		var _g1 = 0;
		var _g = valueClasses.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.injector.mapValue(valueClasses[i],valueObjects[i]);
		}
	}
	,unmapSignalValues: function(valueClasses,valueObjects) {
		var _g1 = 0;
		var _g = valueClasses.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.injector.unmap(valueClasses[i]);
		}
	}
	,detain: function(command) {
		this.detainedCommands.set(command,true);
	}
	,release: function(command) {
		if(this.detainedCommands.h.__keys__[command.__id__] != null) {
			this.detainedCommands.remove(command);
		}
	}
	,__class__: mmvc_base_CommandMap
};
var mmvc_base_ContextError = function(message,id) {
	if(id == null) {
		id = 0;
	}
	if(message == null) {
		message = "";
	}
	this.message = message;
	this.id = id;
};
$hxClasses["mmvc.base.ContextError"] = mmvc_base_ContextError;
mmvc_base_ContextError.__name__ = ["mmvc","base","ContextError"];
mmvc_base_ContextError.prototype = {
	__class__: mmvc_base_ContextError
};
var mmvc_base_ViewMapBase = function(contextView,injector) {
	this.viewListenerCount = 0;
	this.set_enabled(true);
	this.injector = injector;
	this.set_contextView(contextView);
};
$hxClasses["mmvc.base.ViewMapBase"] = mmvc_base_ViewMapBase;
mmvc_base_ViewMapBase.__name__ = ["mmvc","base","ViewMapBase"];
mmvc_base_ViewMapBase.prototype = {
	set_contextView: function(value) {
		if(value != this.contextView) {
			this.removeListeners();
			this.contextView = value;
			if(this.viewListenerCount > 0) {
				this.addListeners();
			}
		}
		return this.contextView;
	}
	,set_enabled: function(value) {
		if(value != this.enabled) {
			this.removeListeners();
			this.enabled = value;
			if(this.viewListenerCount > 0) {
				this.addListeners();
			}
		}
		return value;
	}
	,addListeners: function() {
	}
	,removeListeners: function() {
	}
	,onViewAdded: function(view) {
	}
	,onViewRemoved: function(view) {
	}
	,__class__: mmvc_base_ViewMapBase
	,__properties__: {set_enabled:"set_enabled",set_contextView:"set_contextView"}
};
var mmvc_base_MediatorMap = function(contextView,injector,reflector) {
	mmvc_base_ViewMapBase.call(this,contextView,injector);
	this.reflector = reflector;
	this.mediatorByView = new haxe_ds_ObjectMap();
	this.mappingConfigByView = new haxe_ds_ObjectMap();
	this.mappingConfigByViewClassName = new haxe_ds_StringMap();
	this.mediatorsMarkedForRemoval = new haxe_ds_ObjectMap();
	this.hasMediatorsMarkedForRemoval = false;
};
$hxClasses["mmvc.base.MediatorMap"] = mmvc_base_MediatorMap;
mmvc_base_MediatorMap.__name__ = ["mmvc","base","MediatorMap"];
mmvc_base_MediatorMap.__interfaces__ = [mmvc_api_IMediatorMap];
mmvc_base_MediatorMap.__super__ = mmvc_base_ViewMapBase;
mmvc_base_MediatorMap.prototype = $extend(mmvc_base_ViewMapBase.prototype,{
	mapView: function(viewClassOrName,mediatorClass,injectViewAs,autoCreate,autoRemove) {
		if(autoRemove == null) {
			autoRemove = true;
		}
		if(autoCreate == null) {
			autoCreate = true;
		}
		var viewClassName = this.reflector.getFQCN(viewClassOrName);
		var _this = this.mappingConfigByViewClassName;
		if((__map_reserved[viewClassName] != null ? _this.getReserved(viewClassName) : _this.h[viewClassName]) != null) {
			throw new js__$Boot_HaxeError(new mmvc_base_ContextError("Mediator Class has already been mapped to a View Class in this context - " + Std.string(mediatorClass)));
		}
		if(this.reflector.classExtendsOrImplements(mediatorClass,mmvc_api_IMediator) == false) {
			throw new js__$Boot_HaxeError(new mmvc_base_ContextError("Mediator Class does not implement IMediator - " + Std.string(mediatorClass)));
		}
		var config = new mmvc_base_MappingConfig();
		config.mediatorClass = mediatorClass;
		config.autoCreate = autoCreate;
		config.autoRemove = autoRemove;
		if(injectViewAs) {
			if((injectViewAs instanceof Array) && injectViewAs.__enum__ == null) {
				config.typedViewClasses = (js_Boot.__cast(injectViewAs , Array)).slice();
			} else if(js_Boot.__instanceof(injectViewAs,Class)) {
				config.typedViewClasses = [injectViewAs];
			}
		} else if(js_Boot.__instanceof(viewClassOrName,Class)) {
			config.typedViewClasses = [viewClassOrName];
		}
		var _this1 = this.mappingConfigByViewClassName;
		if(__map_reserved[viewClassName] != null) {
			_this1.setReserved(viewClassName,config);
		} else {
			_this1.h[viewClassName] = config;
		}
		if(autoCreate || autoRemove) {
			this.viewListenerCount++;
			if(this.viewListenerCount == 1) {
				this.addListeners();
			}
		}
		var tmp;
		if(autoCreate && this.contextView != null) {
			var o = this.contextView;
			tmp = viewClassName == Type.getClassName(o == null ? null : js_Boot.getClass(o));
		} else {
			tmp = false;
		}
		if(tmp) {
			this.createMediatorUsing(this.contextView,viewClassName,config);
		}
	}
	,unmapView: function(viewClassOrName) {
		var viewClassName = this.reflector.getFQCN(viewClassOrName);
		var _this = this.mappingConfigByViewClassName;
		var config = __map_reserved[viewClassName] != null ? _this.getReserved(viewClassName) : _this.h[viewClassName];
		if(config != null && (config.autoCreate || config.autoRemove)) {
			this.viewListenerCount--;
			if(this.viewListenerCount == 0) {
				this.removeListeners();
			}
		}
		this.mappingConfigByViewClassName.remove(viewClassName);
	}
	,createMediator: function(viewComponent) {
		return this.createMediatorUsing(viewComponent);
	}
	,registerMediator: function(viewComponent,mediator) {
		this.mediatorByView.set(viewComponent,mediator);
		var this1 = this.mappingConfigByViewClassName;
		var o = viewComponent;
		var key = Type.getClassName(o == null ? null : js_Boot.getClass(o));
		var _this = this1;
		var mapping = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		this.mappingConfigByView.set(viewComponent,mapping);
		mediator.setViewComponent(viewComponent);
		mediator.preRegister();
	}
	,removeMediator: function(mediator) {
		if(mediator != null) {
			var viewComponent = mediator.getViewComponent();
			this.mediatorByView.remove(viewComponent);
			this.mappingConfigByView.remove(viewComponent);
			mediator.preRemove();
			mediator.setViewComponent(null);
		}
		return mediator;
	}
	,removeMediatorByView: function(viewComponent) {
		var mediator = this.removeMediator(this.retrieveMediator(viewComponent));
		this.injector.attendedToInjectees.remove(mediator);
		return mediator;
	}
	,retrieveMediator: function(viewComponent) {
		return this.mediatorByView.h[viewComponent.__id__];
	}
	,hasMapping: function(viewClassOrName) {
		var viewClassName = this.reflector.getFQCN(viewClassOrName);
		var _this = this.mappingConfigByViewClassName;
		if(__map_reserved[viewClassName] != null) {
			return _this.existsReserved(viewClassName);
		} else {
			return _this.h.hasOwnProperty(viewClassName);
		}
	}
	,hasMediatorForView: function(viewComponent) {
		return this.mediatorByView.h.__keys__[viewComponent.__id__] != null;
	}
	,hasMediator: function(mediator) {
		var key = this.mediatorByView.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			if(this.mediatorByView.h[key1.__id__] == mediator) {
				return true;
			}
		}
		return false;
	}
	,addListeners: function() {
		if(this.contextView != null && this.enabled) {
			this.contextView.viewAdded = $bind(this,this.onViewAdded);
			this.contextView.viewRemoved = $bind(this,this.onViewRemoved);
		}
	}
	,removeListeners: function() {
		if(this.contextView != null) {
			this.contextView.viewAdded = null;
			this.contextView.viewRemoved = null;
		}
	}
	,onViewAdded: function(view) {
		if(this.mediatorsMarkedForRemoval.h[view.__id__] != null) {
			this.mediatorsMarkedForRemoval.remove(view);
			return;
		}
		var o = view;
		var viewClassName = Type.getClassName(o == null ? null : js_Boot.getClass(o));
		var _this = this.mappingConfigByViewClassName;
		var config = __map_reserved[viewClassName] != null ? _this.getReserved(viewClassName) : _this.h[viewClassName];
		if(config != null && config.autoCreate) {
			this.createMediatorUsing(view,viewClassName,config);
		}
	}
	,onViewRemoved: function(view) {
		var config = this.mappingConfigByView.h[view.__id__];
		if(config != null && config.autoRemove) {
			this.removeMediatorByView(view);
		}
	}
	,removeMediatorLater: function() {
		var view = this.mediatorsMarkedForRemoval.iterator();
		while(view.hasNext()) {
			var view1 = view.next();
			if(!this.contextView.isAdded(view1)) {
				this.removeMediatorByView(view1);
			}
			this.mediatorsMarkedForRemoval.remove(view1);
		}
		this.hasMediatorsMarkedForRemoval = false;
	}
	,createMediatorUsing: function(viewComponent,viewClassName,config) {
		var mediator = this.mediatorByView.h[viewComponent.__id__];
		if(mediator == null) {
			if(viewClassName == null) {
				var o = viewComponent;
				viewClassName = Type.getClassName(o == null ? null : js_Boot.getClass(o));
			}
			if(config == null) {
				var _this = this.mappingConfigByViewClassName;
				if(__map_reserved[viewClassName] != null) {
					config = _this.getReserved(viewClassName);
				} else {
					config = _this.h[viewClassName];
				}
			}
			if(config != null) {
				if(config.typedViewClasses != null) {
					var _g = 0;
					var _g1 = config.typedViewClasses;
					while(_g < _g1.length) {
						var claxx = _g1[_g];
						++_g;
						this.injector.mapValue(claxx,viewComponent);
					}
				}
				mediator = this.injector.instantiate(config.mediatorClass);
				if(config.typedViewClasses != null) {
					var _g2 = 0;
					var _g11 = config.typedViewClasses;
					while(_g2 < _g11.length) {
						var clazz = _g11[_g2];
						++_g2;
						this.injector.unmap(clazz);
					}
				}
				this.registerMediator(viewComponent,mediator);
			}
		}
		return mediator;
	}
	,__class__: mmvc_base_MediatorMap
});
var mmvc_base_MappingConfig = function() {
};
$hxClasses["mmvc.base.MappingConfig"] = mmvc_base_MappingConfig;
mmvc_base_MappingConfig.__name__ = ["mmvc","base","MappingConfig"];
mmvc_base_MappingConfig.prototype = {
	__class__: mmvc_base_MappingConfig
};
var mmvc_base_TriggerMap = function(injector) {
	this.injector = injector;
};
$hxClasses["mmvc.base.TriggerMap"] = mmvc_base_TriggerMap;
mmvc_base_TriggerMap.__name__ = ["mmvc","base","TriggerMap"];
mmvc_base_TriggerMap.__interfaces__ = [mmvc_api_ITriggerMap];
mmvc_base_TriggerMap.prototype = {
	map: function(trigger,command) {
		if(this.isClass(trigger)) {
			this.mapClass(trigger,command);
			return;
		}
		if(this.isString(trigger)) {
			this.mapString(trigger,command);
			return;
		}
		if(this.isEnumValue(trigger)) {
			this.mapEnumValue(trigger,command);
			return;
		}
		if(this.isInt(trigger)) {
			this.mapInt(trigger,command);
			return;
		}
		throw new js__$Boot_HaxeError("Mapping type " + Std.string(Type["typeof"](trigger)) + " is not supported.");
	}
	,unmap: function(trigger,command) {
		if(this.isClass(trigger)) {
			this.unmapClass(trigger,command);
			return;
		}
		if(this.isString(trigger)) {
			this.unmapString(trigger,command);
			return;
		}
		if(this.isEnumValue(trigger)) {
			this.unmapEnumValue(trigger,command);
			return;
		}
		if(this.isInt(trigger)) {
			this.unmapInt(trigger,command);
			return;
		}
		throw new js__$Boot_HaxeError("Unmapping type " + Std.string(Type["typeof"](trigger)) + " is not supported.");
	}
	,dispatch: function(trigger) {
		if(this.isEnumValue(trigger)) {
			this.dispatchEnumValue(trigger);
			return;
		}
		if(this.isString(trigger)) {
			this.dispatchString(trigger);
			return;
		}
		if(this.isInt(trigger)) {
			this.dispatchInt(trigger);
			return;
		}
		if(this.isClassInstance(trigger)) {
			this.dispatchClass(trigger);
			return;
		}
		throw new js__$Boot_HaxeError("Unmapping type " + Std.string(Type["typeof"](trigger)) + " is not supported.");
	}
	,mapClass: function(trigger,command) {
		if(this.classToCommand == null) {
			this.classToCommand = new haxe_ds_StringMap();
		}
		var key = Type.getClassName(trigger);
		var _this = this.classToCommand;
		var list = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(list == null) {
			var _this1 = this.classToCommand;
			var value = [command];
			if(__map_reserved[key] != null) {
				_this1.setReserved(key,value);
			} else {
				_this1.h[key] = value;
			}
		} else {
			list.push(command);
		}
	}
	,unmapClass: function(trigger,command) {
		if(this.classToCommand == null) {
			return;
		}
		var key = Type.getClassName(trigger);
		var _this = this.classToCommand;
		var list = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(list != null) {
			HxOverrides.remove(list,command);
		}
	}
	,dispatchClass: function(trigger) {
		if(this.classToCommand == null) {
			return;
		}
		var triggerClass = trigger == null ? null : js_Boot.getClass(trigger);
		var key = Type.getClassName(triggerClass);
		var _this = this.classToCommand;
		var list = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(list != null) {
			var _g = 0;
			while(_g < list.length) {
				var commandClass = list[_g];
				++_g;
				this.invokeCommand(trigger,triggerClass,commandClass);
			}
		}
	}
	,mapString: function(trigger,command) {
		if(this.stringToCommand == null) {
			this.stringToCommand = new haxe_ds_StringMap();
		}
		var _this = this.stringToCommand;
		var list = __map_reserved[trigger] != null ? _this.getReserved(trigger) : _this.h[trigger];
		if(list == null) {
			var _this1 = this.stringToCommand;
			var value = [command];
			if(__map_reserved[trigger] != null) {
				_this1.setReserved(trigger,value);
			} else {
				_this1.h[trigger] = value;
			}
		} else {
			list.push(command);
		}
	}
	,unmapString: function(trigger,command) {
		if(this.stringToCommand == null) {
			return;
		}
		var _this = this.stringToCommand;
		var list = __map_reserved[trigger] != null ? _this.getReserved(trigger) : _this.h[trigger];
		if(list != null) {
			HxOverrides.remove(list,command);
		}
	}
	,dispatchString: function(trigger) {
		if(this.stringToCommand == null) {
			return;
		}
		var _this = this.stringToCommand;
		var list = __map_reserved[trigger] != null ? _this.getReserved(trigger) : _this.h[trigger];
		if(list != null) {
			var _g = 0;
			while(_g < list.length) {
				var commandClass = list[_g];
				++_g;
				this.invokeCommand(trigger,String,commandClass);
			}
		}
	}
	,mapEnumValue: function(trigger,command) {
		if(this.enumValueToCommand == null) {
			this.enumValueToCommand = new haxe_ds_EnumValueMap();
		}
		var list = this.enumValueToCommand.get(trigger);
		if(list == null) {
			this.enumValueToCommand.set(trigger,[command]);
		} else {
			list.push(command);
		}
	}
	,unmapEnumValue: function(trigger,command) {
		if(this.enumValueToCommand == null) {
			return;
		}
		var list = this.enumValueToCommand.get(trigger);
		if(list != null) {
			HxOverrides.remove(list,command);
		}
	}
	,dispatchEnumValue: function(trigger) {
		if(this.enumValueToCommand == null) {
			return;
		}
		var triggerClass = trigger == null ? null : js_Boot.getClass(trigger);
		var list = this.enumValueToCommand.get(trigger);
		if(list != null) {
			var _g = 0;
			while(_g < list.length) {
				var commandClass = list[_g];
				++_g;
				this.invokeCommand(trigger,triggerClass,commandClass);
			}
		}
	}
	,mapInt: function(trigger,command) {
		if(this.intToCommand == null) {
			this.intToCommand = new haxe_ds_IntMap();
		}
		var list = this.intToCommand.h[trigger];
		if(list == null) {
			this.intToCommand.h[trigger] = [command];
		} else {
			list.push(command);
		}
	}
	,unmapInt: function(trigger,command) {
		if(this.intToCommand == null) {
			return;
		}
		var list = this.intToCommand.h[trigger];
		if(list != null) {
			HxOverrides.remove(list,command);
		}
	}
	,dispatchInt: function(trigger) {
		if(this.intToCommand == null) {
			return;
		}
		var triggerClass = trigger == null ? null : js_Boot.getClass(trigger);
		var list = this.intToCommand.h[trigger];
		if(list != null) {
			var _g = 0;
			while(_g < list.length) {
				var commandClass = list[_g];
				++_g;
				this.invokeCommand(trigger,triggerClass,commandClass);
			}
		}
	}
	,mapInstance: function(trigger,command) {
		if(!this.isClassInstance(trigger)) {
			throw new js__$Boot_HaxeError("Trigger " + Std.string(trigger) + " is not an object.");
		}
		if(this.instanceToCommand == null) {
			this.instanceToCommand = new haxe_ds_ObjectMap();
		}
		var list = this.instanceToCommand.h[trigger.__id__];
		if(list == null) {
			this.instanceToCommand.set(trigger,[command]);
		} else {
			list.push(command);
		}
	}
	,unmapInstance: function(trigger,command) {
		if(!this.isClassInstance(trigger)) {
			throw new js__$Boot_HaxeError("Trigger " + Std.string(trigger) + " is not an object.");
		}
		if(this.instanceToCommand == null) {
			return;
		}
		var list = this.instanceToCommand.h[trigger.__id__];
		if(list != null) {
			HxOverrides.remove(list,command);
		}
	}
	,dispatchInstance: function(trigger) {
		if(!this.isClassInstance(trigger)) {
			throw new js__$Boot_HaxeError("Trigger " + Std.string(trigger) + " is not an object.");
		}
		if(this.instanceToCommand == null) {
			return;
		}
		var triggerClass = trigger == null ? null : js_Boot.getClass(trigger);
		var list = this.instanceToCommand.h[trigger.__id__];
		if(list != null) {
			var _g = 0;
			while(_g < list.length) {
				var commandClass = list[_g];
				++_g;
				this.invokeCommand(trigger,triggerClass,commandClass);
			}
		}
	}
	,invokeCommand: function(trigger,triggerClass,commandClass) {
		if(commandClass == null) {
			return;
		}
		var command = this.injector.instantiate(commandClass);
		if(js_Boot.__instanceof(command,mmvc_impl_TriggerCommand)) {
			var triggerCommand = command;
			triggerCommand.trigger = trigger;
		}
		command.execute();
	}
	,isClass: function(source) {
		return js_Boot.__instanceof(source,Class);
	}
	,isString: function(source) {
		return typeof(source) == "string";
	}
	,isEnumValue: function(source) {
		return Reflect.isEnumValue(source);
	}
	,isInt: function(source) {
		if(typeof(source) == "number") {
			return ((source | 0) === source);
		} else {
			return false;
		}
	}
	,isClassInstance: function(source) {
		var tmp;
		var tmp1;
		var o = source;
		if((o == null ? null : js_Boot.getClass(o)) != null) {
			tmp1 = isNaN(source);
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			tmp = !this.isString(source);
		} else {
			tmp = false;
		}
		if(tmp) {
			return !this.isEnumValue(source);
		} else {
			return false;
		}
	}
	,__class__: mmvc_base_TriggerMap
};
var mmvc_base_ViewMap = function(contextView,injector) {
	mmvc_base_ViewMapBase.call(this,contextView,injector);
	this.mappedPackages = [];
	this.mappedTypes = new minject_ClassMap();
	this.injectedViews = new haxe_ds_ObjectMap();
};
$hxClasses["mmvc.base.ViewMap"] = mmvc_base_ViewMap;
mmvc_base_ViewMap.__name__ = ["mmvc","base","ViewMap"];
mmvc_base_ViewMap.__interfaces__ = [mmvc_api_IViewMap];
mmvc_base_ViewMap.__super__ = mmvc_base_ViewMapBase;
mmvc_base_ViewMap.prototype = $extend(mmvc_base_ViewMapBase.prototype,{
	mapPackage: function(packageName) {
		if(this.mappedPackages.indexOf(packageName) > -1) {
			return;
		}
		this.mappedPackages.push(packageName);
		this.viewListenerCount++;
		if(this.viewListenerCount == 1) {
			this.addListeners();
		}
	}
	,unmapPackage: function(packageName) {
		if(!HxOverrides.remove(this.mappedPackages,packageName)) {
			return;
		}
		this.viewListenerCount--;
		if(this.viewListenerCount == 0) {
			this.removeListeners();
		}
	}
	,mapType: function(type) {
		if(this.mappedTypes.exists(type)) {
			return;
		}
		this.mappedTypes.set(type,type);
		this.viewListenerCount++;
		if(this.viewListenerCount == 1) {
			this.addListeners();
		}
		if(this.contextView != null && js_Boot.__instanceof(this.contextView,type)) {
			this.injectInto(this.contextView);
		}
	}
	,unmapType: function(type) {
		if(!this.mappedTypes.exists(type)) {
			return;
		}
		this.mappedTypes.remove(type);
		this.viewListenerCount--;
		if(this.viewListenerCount == 0) {
			this.removeListeners();
		}
	}
	,hasType: function(type) {
		return this.mappedTypes.exists(type);
	}
	,hasPackage: function(packageName) {
		return this.mappedPackages.indexOf(packageName) > -1;
	}
	,addListeners: function() {
		if(this.contextView == null || !this.enabled) {
			return;
		}
		this.contextView.viewAdded = $bind(this,this.onViewAdded);
		this.contextView.viewRemoved = $bind(this,this.onViewAdded);
	}
	,removeListeners: function() {
		if(this.contextView == null) {
			return;
		}
		this.contextView.viewAdded = null;
		this.contextView.viewRemoved = null;
	}
	,onViewAdded: function(view) {
		if(this.injectedViews.h.__keys__[view.__id__] != null) {
			return;
		}
		var type = this.mappedTypes.iterator();
		while(type.hasNext()) {
			var type1 = type.next();
			if(js_Boot.__instanceof(view,type1)) {
				this.injectInto(view);
				return;
			}
		}
		var len = this.mappedPackages.length;
		if(len > 0) {
			var o = view;
			var className = Type.getClassName(o == null ? null : js_Boot.getClass(o));
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i = _g1++;
				var packageName = this.mappedPackages[i];
				if(className.indexOf(packageName) == 0) {
					this.injectInto(view);
					return;
				}
			}
		}
	}
	,onViewRemoved: function(view) {
	}
	,injectInto: function(view) {
		this.injector.injectInto(view);
		this.injectedViews.set(view,true);
	}
	,__class__: mmvc_base_ViewMap
});
var mmvc_impl_TriggerCommand = function() {
};
$hxClasses["mmvc.impl.TriggerCommand"] = mmvc_impl_TriggerCommand;
mmvc_impl_TriggerCommand.__name__ = ["mmvc","impl","TriggerCommand"];
mmvc_impl_TriggerCommand.__interfaces__ = [mmvc_api_ICommand];
mmvc_impl_TriggerCommand.prototype = {
	execute: function() {
	}
	,dispatch: function(trigger) {
		this.triggerMap.dispatch(trigger);
	}
	,__class__: mmvc_impl_TriggerCommand
};
var msignal_Signal0 = function() {
	msignal_Signal.call(this);
};
$hxClasses["msignal.Signal0"] = msignal_Signal0;
msignal_Signal0.__name__ = ["msignal","Signal0"];
msignal_Signal0.__super__ = msignal_Signal;
msignal_Signal0.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function() {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute();
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot0(this,listener,once,priority);
	}
	,__class__: msignal_Signal0
});
var msignal_Slot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	this.signal = signal;
	this.set_listener(listener);
	this.once = once;
	this.priority = priority;
	this.enabled = true;
};
$hxClasses["msignal.Slot"] = msignal_Slot;
msignal_Slot.__name__ = ["msignal","Slot"];
msignal_Slot.prototype = {
	remove: function() {
		this.signal.remove(this.listener);
	}
	,set_listener: function(value) {
		if(value == null) {
			throw new js__$Boot_HaxeError("listener cannot be null");
		}
		return this.listener = value;
	}
	,__class__: msignal_Slot
	,__properties__: {set_listener:"set_listener"}
};
var msignal_Slot0 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot0"] = msignal_Slot0;
msignal_Slot0.__name__ = ["msignal","Slot0"];
msignal_Slot0.__super__ = msignal_Slot;
msignal_Slot0.prototype = $extend(msignal_Slot.prototype,{
	execute: function() {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener();
	}
	,__class__: msignal_Slot0
});
var msignal_Slot1 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot1"] = msignal_Slot1;
msignal_Slot1.__name__ = ["msignal","Slot1"];
msignal_Slot1.__super__ = msignal_Slot;
msignal_Slot1.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param != null) {
			value1 = this.param;
		}
		this.listener(value1);
	}
	,__class__: msignal_Slot1
});
var msignal_Slot2 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot2"] = msignal_Slot2;
msignal_Slot2.__name__ = ["msignal","Slot2"];
msignal_Slot2.__super__ = msignal_Slot;
msignal_Slot2.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1,value2) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param1 != null) {
			value1 = this.param1;
		}
		if(this.param2 != null) {
			value2 = this.param2;
		}
		this.listener(value1,value2);
	}
	,__class__: msignal_Slot2
});
var msignal_SlotList = function(head,tail) {
	this.nonEmpty = false;
	if(head == null && tail == null) {
		if(msignal_SlotList.NIL != null) {
			throw new js__$Boot_HaxeError("Parameters head and tail are null. Use the NIL element instead.");
		}
		this.nonEmpty = false;
	} else if(head == null) {
		throw new js__$Boot_HaxeError("Parameter head cannot be null.");
	} else {
		this.head = head;
		this.tail = tail == null ? msignal_SlotList.NIL : tail;
		this.nonEmpty = true;
	}
};
$hxClasses["msignal.SlotList"] = msignal_SlotList;
msignal_SlotList.__name__ = ["msignal","SlotList"];
msignal_SlotList.prototype = {
	get_length: function() {
		if(!this.nonEmpty) {
			return 0;
		}
		if(this.tail == msignal_SlotList.NIL) {
			return 1;
		}
		var result = 0;
		var p = this;
		while(p.nonEmpty) {
			++result;
			p = p.tail;
		}
		return result;
	}
	,prepend: function(slot) {
		return new msignal_SlotList(slot,this);
	}
	,append: function(slot) {
		if(slot == null) {
			return this;
		}
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		if(this.tail == msignal_SlotList.NIL) {
			return new msignal_SlotList(slot).prepend(this.head);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,insertWithPriority: function(slot) {
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		var priority = slot.priority;
		if(priority >= this.head.priority) {
			return this.prepend(slot);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(priority > current.head.priority) {
				subClone.tail = current.prepend(slot);
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,filterNot: function(listener) {
		if(!this.nonEmpty || listener == null) {
			return this;
		}
		if(Reflect.compareMethods(this.head.listener,listener)) {
			return this.tail;
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(Reflect.compareMethods(current.head.listener,listener)) {
				subClone.tail = current.tail;
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		return this;
	}
	,contains: function(listener) {
		if(!this.nonEmpty) {
			return false;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return true;
			}
			p = p.tail;
		}
		return false;
	}
	,find: function(listener) {
		if(!this.nonEmpty) {
			return null;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return p.head;
			}
			p = p.tail;
		}
		return null;
	}
	,__class__: msignal_SlotList
	,__properties__: {get_length:"get_length"}
};
var yloader_ILoader = function() { };
$hxClasses["yloader.ILoader"] = yloader_ILoader;
yloader_ILoader.__name__ = ["yloader","ILoader"];
yloader_ILoader.prototype = {
	__class__: yloader_ILoader
};
var yloader_enums_Method = { __ename__ : true, __constructs__ : ["CONNECT","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT","TRACE"] };
yloader_enums_Method.CONNECT = ["CONNECT",0];
yloader_enums_Method.CONNECT.toString = $estr;
yloader_enums_Method.CONNECT.__enum__ = yloader_enums_Method;
yloader_enums_Method.DELETE = ["DELETE",1];
yloader_enums_Method.DELETE.toString = $estr;
yloader_enums_Method.DELETE.__enum__ = yloader_enums_Method;
yloader_enums_Method.GET = ["GET",2];
yloader_enums_Method.GET.toString = $estr;
yloader_enums_Method.GET.__enum__ = yloader_enums_Method;
yloader_enums_Method.HEAD = ["HEAD",3];
yloader_enums_Method.HEAD.toString = $estr;
yloader_enums_Method.HEAD.__enum__ = yloader_enums_Method;
yloader_enums_Method.OPTIONS = ["OPTIONS",4];
yloader_enums_Method.OPTIONS.toString = $estr;
yloader_enums_Method.OPTIONS.__enum__ = yloader_enums_Method;
yloader_enums_Method.PATCH = ["PATCH",5];
yloader_enums_Method.PATCH.toString = $estr;
yloader_enums_Method.PATCH.__enum__ = yloader_enums_Method;
yloader_enums_Method.POST = ["POST",6];
yloader_enums_Method.POST.toString = $estr;
yloader_enums_Method.POST.__enum__ = yloader_enums_Method;
yloader_enums_Method.PUT = ["PUT",7];
yloader_enums_Method.PUT.toString = $estr;
yloader_enums_Method.PUT.__enum__ = yloader_enums_Method;
yloader_enums_Method.TRACE = ["TRACE",8];
yloader_enums_Method.TRACE.toString = $estr;
yloader_enums_Method.TRACE.__enum__ = yloader_enums_Method;
var yloader_enums_Status = function() { };
$hxClasses["yloader.enums.Status"] = yloader_enums_Status;
yloader_enums_Status.__name__ = ["yloader","enums","Status"];
var yloader_impl_js_XMLHttpRequestLoader = function(request) {
	this.request = request;
};
$hxClasses["yloader.impl.js.XMLHttpRequestLoader"] = yloader_impl_js_XMLHttpRequestLoader;
yloader_impl_js_XMLHttpRequestLoader.__name__ = ["yloader","impl","js","XMLHttpRequestLoader"];
yloader_impl_js_XMLHttpRequestLoader.__interfaces__ = [yloader_ILoader];
yloader_impl_js_XMLHttpRequestLoader.prototype = {
	createXHR: function() {
		return js_Browser.createXMLHttpRequest();
	}
	,load: function() {
		this.cancel();
		this.xhr = this.createXHR();
		this.prepareXHR(this.xhr);
		this.xhr.send(this.request.data);
	}
	,cancel: function() {
		if(this.xhr != null) {
			this.disposeXHR(this.xhr);
		}
		this.xhr = null;
	}
	,getStatus: function(xhr) {
		var result;
		try {
			result = xhr.status;
		} catch( error ) {
			result = -1;
		}
		if(result == undefined) {
			return -1;
		} else {
			return result;
		}
	}
	,getHeaders: function(xhr) {
		var text = xhr.getAllResponseHeaders();
		var result = yloader_util_HeaderUtil.toParameters(text);
		return result;
	}
	,getResponse: function(xhr) {
		var status = this.getStatus(xhr);
		var success = this.isSuccess(status);
		var headers = this.getHeaders(xhr);
		return new yloader_valueObject_Response(success,xhr.response,status,xhr.statusText,headers);
	}
	,isSuccess: function(status) {
		if(status >= 200) {
			return status < 400;
		} else {
			return false;
		}
	}
	,handleResponse: function(xhr) {
		if(this.onResponse == null) {
			return;
		}
		var response = this.getResponse(xhr);
		this.onResponse(response);
	}
	,dispose: function() {
		this.cancel();
	}
	,prepareXHR: function(xhr) {
		var method = Std.string(this.request.method);
		xhr.onreadystatechange = $bind(this,this.onXHRReadyStateChange);
		xhr.open(method,this.request.get_urlWithQuery(),true);
		if(this.withCredentials) {
			xhr.withCredentials = true;
		}
		var _g = 0;
		var _g1 = this.request.headers;
		while(_g < _g1.length) {
			var header = _g1[_g];
			++_g;
			xhr.setRequestHeader(header.name,header.value);
		}
	}
	,disposeXHR: function(xhr) {
		xhr.onreadystatechange = null;
		try {
			xhr.abort();
		} catch( error ) {
		}
	}
	,onXHRReadyStateChange: function(event) {
		if(this.xhr.readyState != 4) {
			return;
		}
		this.handleResponse(this.xhr);
		this.dispose();
	}
	,__class__: yloader_impl_js_XMLHttpRequestLoader
};
var yloader_util_HeaderUtil = function() { };
$hxClasses["yloader.util.HeaderUtil"] = yloader_util_HeaderUtil;
yloader_util_HeaderUtil.__name__ = ["yloader","util","HeaderUtil"];
yloader_util_HeaderUtil.toParameters = function(text) {
	var lines = text.split("\n");
	var result = [];
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		if(line == "") {
			continue;
		}
		var data = line.split(":");
		var name = StringTools.trim(data.shift());
		var value = StringTools.trim(data.join(":"));
		result.push(new yloader_valueObject_Parameter(name,value));
	}
	return result;
};
var yloader_util_ParameterUtil = function() { };
$hxClasses["yloader.util.ParameterUtil"] = yloader_util_ParameterUtil;
yloader_util_ParameterUtil.__name__ = ["yloader","util","ParameterUtil"];
yloader_util_ParameterUtil.update = function(list,parameter) {
	var found = false;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		if(item.name == parameter.name) {
			item.value = parameter.value;
			found = true;
		}
	}
	if(!found) {
		list.push(parameter);
	}
};
yloader_util_ParameterUtil.urlEncode = function(list) {
	var result = null;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		var s = item.name;
		var result1 = (result == null ? "" : result + "&") + encodeURIComponent(s) + "=";
		var s1 = item.value;
		result = result1 + encodeURIComponent(s1);
	}
	return result;
};
yloader_util_ParameterUtil.fromQueryString = function(source) {
	if(source == null) {
		return null;
	}
	var queryString = HxOverrides.substr(source,0,1) == "?" ? HxOverrides.substr(source,1,null) : source;
	if(queryString == "") {
		return null;
	}
	var result = [];
	var pairs = queryString.split("&");
	var _g = 0;
	while(_g < pairs.length) {
		var pair = pairs[_g];
		++_g;
		result.push(yloader_util_ParameterUtil.fromPair(pair));
	}
	return result;
};
yloader_util_ParameterUtil.fromPair = function(pair) {
	var index = pair.indexOf("=");
	var name;
	var value = "";
	if(index >= 0) {
		var s = pair.substring(0,index);
		name = decodeURIComponent(s.split("+").join(" "));
		var s1 = pair.substring(index + 1);
		value = decodeURIComponent(s1.split("+").join(" "));
	} else {
		name = decodeURIComponent(pair.split("+").join(" "));
	}
	return new yloader_valueObject_Parameter(name,value);
};
var yloader_valueObject_Parameter = function(name,value) {
	this.name = name;
	this.value = value;
};
$hxClasses["yloader.valueObject.Parameter"] = yloader_valueObject_Parameter;
yloader_valueObject_Parameter.__name__ = ["yloader","valueObject","Parameter"];
yloader_valueObject_Parameter.prototype = {
	__class__: yloader_valueObject_Parameter
};
var yloader_valueObject_Request = function(url) {
	this.data = null;
	this.url = url;
	this.method = yloader_enums_Method.GET;
	this.headers = [];
	this.getParameters = [];
};
$hxClasses["yloader.valueObject.Request"] = yloader_valueObject_Request;
yloader_valueObject_Request.__name__ = ["yloader","valueObject","Request"];
yloader_valueObject_Request.prototype = {
	get_urlWithQuery: function() {
		var query = yloader_util_ParameterUtil.urlEncode(this.getParameters);
		var result = this.url;
		if(query != null) {
			result += (result.indexOf("?") == -1 ? "?" : "&") + query;
		}
		return result;
	}
	,setHeader: function(header) {
		yloader_util_ParameterUtil.update(this.headers,header);
	}
	,setGetParameter: function(parameter) {
		yloader_util_ParameterUtil.update(this.getParameters,parameter);
	}
	,__class__: yloader_valueObject_Request
	,__properties__: {get_urlWithQuery:"get_urlWithQuery"}
};
var yloader_valueObject_Response = function(success,data,status,statusText,headers) {
	this.success = success;
	this.data = data;
	this.status = status;
	this.statusText = statusText;
	this.headers = headers;
};
$hxClasses["yloader.valueObject.Response"] = yloader_valueObject_Response;
yloader_valueObject_Response.__name__ = ["yloader","valueObject","Response"];
yloader_valueObject_Response.prototype = {
	__class__: yloader_valueObject_Response
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
msignal_SlotList.NIL = new msignal_SlotList(null,null);
core_view_Component.displayName = "Component";
core_interfaces_IApplication.__meta__ = { obj : { 'interface' : null}};
mmvc_api_IViewContainer.__meta__ = { obj : { 'interface' : null}};
Application.displayName = "Application";
mmvc_api_IContext.__meta__ = { obj : { 'interface' : null}};
mmvc_api_ICommand.__meta__ = { obj : { 'interface' : null}};
mmvc_impl_Command.__meta__ = { fields : { contextView : { type : ["mmvc.api.IViewContainer"], inject : null}, commandMap : { type : ["mmvc.api.ICommandMap"], inject : null}, injector : { type : ["minject.Injector"], inject : null}, mediatorMap : { type : ["mmvc.api.IMediatorMap"], inject : null}, signal : { type : ["msignal.Signal"], inject : null}}};
app_controller_commands_prepare_PrepareCompleteCommand.__meta__ = { fields : { todoModel : { type : ["app.model.TodoModel"], inject : null}, messageModel : { type : ["app.model.MessageModel"], inject : null}, todoListMediatorNotificationSignal : { type : ["app.controller.signals.TodoListMediatorNotificationSignal"], inject : null}}};
app_controller_commands_prepare_PrepareControllerCommand.__meta__ = { fields : { createTodoSignal : { type : ["app.controller.signals.todoform.CreateTodoSignal"], inject : null}, deleteTodoSignal : { type : ["app.controller.signals.todolist.DeleteTodoSignal"], inject : null}, toggleTodoSignal : { type : ["app.controller.signals.todolist.ToggleTodoSignal"], inject : null}, updateTodoSignal : { type : ["app.controller.signals.todolist.UpdateTodoSignal"], inject : null}}};
app_controller_commands_todo_CreateTodoCommand.__meta__ = { fields : { todoListMediatorNotificationSignal : { type : ["app.controller.signals.TodoListMediatorNotificationSignal"], inject : null}, todoFormMediatorNotificationSignal : { type : ["app.controller.signals.TodoFormMediatorNotificationSignal"], inject : null}, messageModel : { type : ["app.model.MessageModel"], inject : null}, todoModel : { type : ["app.model.TodoModel"], inject : null}, text : { type : ["String"], inject : null}}};
app_controller_commands_todo_DeleteTodoCommand.__meta__ = { fields : { todoListMediatorNotificationSignal : { type : ["app.controller.signals.TodoListMediatorNotificationSignal"], inject : null}, messageModel : { type : ["app.model.MessageModel"], inject : null}, todoModel : { type : ["app.model.TodoModel"], inject : null}, index : { type : ["Int"], inject : null}}};
app_controller_commands_todo_ToggleTodoCommand.__meta__ = { fields : { todoListMediatorNotificationSignal : { type : ["app.controller.signals.TodoListMediatorNotificationSignal"], inject : null}, messageModel : { type : ["app.model.MessageModel"], inject : null}, todoModel : { type : ["app.model.TodoModel"], inject : null}, index : { type : ["Int"], inject : null}}};
app_controller_commands_todo_UpdateTodoCommand.__meta__ = { fields : { todoListMediatorNotificationSignal : { type : ["app.controller.signals.TodoListMediatorNotificationSignal"], inject : null}, messageModel : { type : ["app.model.MessageModel"], inject : null}, todoModel : { type : ["app.model.TodoModel"], inject : null}, index : { type : ["Int"], inject : null}, text : { type : ["String"], inject : null}}};
app_controller_signals_TodoFormMediatorNotificationSignal.PREFIX = "todoform_mediator_signal__";
app_controller_signals_TodoFormMediatorNotificationSignal.CLEAR_FORM = app_controller_signals_TodoFormMediatorNotificationSignal.PREFIX + "clear_form";
app_controller_signals_TodoListMediatorNotificationSignal.PREFIX = "todolist_mediator_notification_";
app_controller_signals_TodoListMediatorNotificationSignal.SETUP_TODOS = app_controller_signals_TodoListMediatorNotificationSignal.PREFIX + "setdata";
app_controller_signals_TodoListMediatorNotificationSignal.ADD_TODO = app_controller_signals_TodoListMediatorNotificationSignal.PREFIX + "addtodo";
mmvc_impl_Actor.__meta__ = { fields : { injector : { type : ["minject.Injector"], inject : null}}};
app_model_service_ServerService.ERRRO_PARSING_INCOME_DATA = "Error in parsing data";
app_model_service_ServerService.__instance = new app_model_service_ServerService();
core_view_MediatedComponent.displayName = "MediatedComponent";
app_view_components_TodoForm.displayName = "TodoForm";
app_view_components_TodoList.displayName = "TodoList";
app_view_components_popups_InfoPopup.displayName = "InfoPopup";
app_view_components_todolist_TodoListItem.displayName = "TodoListItem";
mmvc_api_IMediator.__meta__ = { obj : { 'interface' : null}};
mmvc_impl_Mediator.__meta__ = { fields : { injector : { type : ["minject.Injector"], inject : null}, contextView : { type : ["mmvc.api.IViewContainer"], inject : null}, mediatorMap : { type : ["mmvc.api.IMediatorMap"], inject : null}}};
app_view_mediators_InfoPopupMediator.__meta__ = { fields : { messageModel : { type : ["app.model.MessageModel"], inject : null}}};
app_view_mediators_TodoFormMediator.__meta__ = { fields : { notificationsSignal : { type : ["app.controller.signals.TodoFormMediatorNotificationSignal"], inject : null}, createTodoSignal : { type : ["app.controller.signals.todoform.CreateTodoSignal"], inject : null}}};
app_view_mediators_TodoListMediator.__meta__ = { fields : { todoListMediatorNotificationSignal : { type : ["app.controller.signals.TodoListMediatorNotificationSignal"], inject : null}, deleteTodoSignal : { type : ["app.controller.signals.todolist.DeleteTodoSignal"], inject : null}, updateTodoSignal : { type : ["app.controller.signals.todolist.UpdateTodoSignal"], inject : null}, toggleTodoSignal : { type : ["app.controller.signals.todolist.ToggleTodoSignal"], inject : null}}};
enums_events_TodoListEvent.PREFIX = "event_todolist_";
enums_events_TodoListEvent.UPDATE_TODO = enums_events_TodoListEvent.PREFIX + "update";
enums_events_TodoListEvent.DELETE_TODO = enums_events_TodoListEvent.PREFIX + "delete";
enums_events_TodoListEvent.TOGGLE_TODO = enums_events_TodoListEvent.PREFIX + "toggle";
enums_network_ServerAPI.ROUTE_TODOS = "todos";
enums_network_ServerAPI.GATEWAY = "http://localhost:3001/api/";
enums_strings_MessageStrings.PREPARING = "PREPARING";
enums_strings_MessageStrings.FAIL_TO_LOAD_DATA = "FAIL TO LOAD DATA!";
enums_strings_MessageStrings.DATA_READY = "DATA READY!";
enums_strings_MessageStrings.DELETE_ITEM_SUCCESS = "ITEM ( %id% ) DELETED SUCCESSFUL!";
enums_strings_MessageStrings.PROBLEM_DELETE_ITEM = "PROBLEM DELETING ITEM ( %id% )";
enums_strings_MessageStrings.EMPTY_TODO = "EMPTY TODO CAN'T BE SAVED";
enums_strings_MessageStrings.SAVING_NEW_TODO = "SAVING NEW TODO ...";
enums_strings_MessageStrings.TODO_SAVED = "TODO SAVED!";
enums_strings_MessageStrings.TODO_CANT_BE_UPDATED = "TODO CAN'T BE UPDATED!";
enums_strings_MessageStrings.SAME_TODO_CANT_UPDATE = "NO CHANGES TO SAVE";
enums_strings_MessageStrings.PROBLEM_SAVING_TODO = "DID NOT SAVE";
enums_strings_MessageStrings.PROBLEM_UPDATE_TODO = "PROBLEM UPDATE TODO";
enums_strings_MessageStrings.TODO_UPDATED = "TODO UPDATED";
enums_strings_MessageStrings.TODO_COMPETE = "TODO %id% COMPLETE: %completed%";
haxe_IMap.__meta__ = { obj : { 'interface' : null}};
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
minject_point_InjectionPoint.__meta__ = { obj : { 'interface' : null}};
mmvc_api_ICommandMap.__meta__ = { obj : { 'interface' : null}};
mmvc_api_IMediatorMap.__meta__ = { obj : { 'interface' : null}};
mmvc_api_ITriggerMap.__meta__ = { obj : { 'interface' : null}};
mmvc_api_IViewMap.__meta__ = { obj : { 'interface' : null}};
mmvc_impl_TriggerCommand.__meta__ = { fields : { contextView : { type : ["mmvc.api.IViewContainer"], inject : null}, commandMap : { type : ["mmvc.api.ICommandMap"], inject : null}, injector : { type : ["minject.Injector"], inject : null}, mediatorMap : { type : ["mmvc.api.IMediatorMap"], inject : null}, triggerMap : { type : ["mmvc.api.ITriggerMap"], inject : null}}};
yloader_ILoader.__meta__ = { obj : { 'interface' : null}};
yloader_enums_Status.UNKNOWN = -2;
yloader_enums_Status.FAILED_TO_CONNECT_OR_RESOLVE_HOST = -1;
yloader_enums_Status.UNKNOWN_HOST = 12007;
yloader_enums_Status.FAILED_TO_CONNECT_TO_HOST = 12029;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=todo-haxe-react.js.map